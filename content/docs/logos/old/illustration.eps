%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Mike Ray) ()%%Title: (cardinal youth.eps)%%CreationDate: 8/6/10 9:35 AM%%Canvassize: 16383%%BoundingBox: 28 76 857 807%%HiResBoundingBox: 28.605 76.3584 856.415 806.9536%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 432.5 431.5 432.5 431.5%AI3_TileBox: 126 36 738 828%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 864 864%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -205.8457 952.9077 1.1288 1588 1037 26 0 0 6 149 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 116 8%%BeginData: 20276 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD1DFFA8A8A7A8A7A8A7CFA8FD74FFA87D27272627202726272651%4B7676A7A8FFCFFD6DFFCF27264A6F6F6F4A6F4B4B4A4B2627265152A1A8%FD68FFA8FFFFFFA74B204B68B58CB58CB58CB58C936E6F202620274BA1A8%FD62FFCFCFA1A77DA17DA8A152264B4B9393B593B593B593B593B5936F4A%2726527DFD5FFFCF7C522727202720272027274B202726938C9392B58CB5%92B58CB592B56E6F202627A1A8FD5CFF7627204B4B6F4B6F6F6F4A4B2727%26272693929393B593B593B593B593B593B56F272076A8FD5AFFA8512093%8CB58CB58CB58CB58C93926F4A4B4A9368938CB58CB58CB58CB58CB58CB5%924BF84B7CCFFD57FFA7A14B4B4A6F6FFD0693B593B593B5FD0793B593B5%93B593B593B593B59399262752FFFFFFCFFD50FFA8A85127F8272027204B%4A6F68938C938CB592B58CB592B58C9392B58CB592B58CB592B58CB592B5%8CB54A204BCF7D76A7FD4EFFA87C2627264B4BFD0693B593B593B593B593%B593B593B593B593B593B593B593B593B593B593B593B54B2651A12051A7%FD4CFFA876202626938CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58C%B58CB58CB58CB58CB58CB58CB58CB58C938CB54A26274B2051A7FD4AFFCF%7D20276FB593B593B5939393B593B593B593B593B593B593B593B593B593%B593B593B593B593B593B593B593B593B56F272727207CCFFD49FFA82627%6FB58C938C938C938C938C938C938CB592B58CB592B58CB592B58CB592B5%8CB592B58CB592B58CB592B58CB592934A27262620A1A1CAFD47FF76274A%B5939392936F6F6E6F6F6F6E93939392B593B593B593B593B593B593B593%B593B593B593B593B593B593B593B593934A2726274B4B52CFFD45FFA852%F86F8C6F4A4B20262026F8274A6F68938C938CB58CB58CB58CB58CB58CB5%8CB58C938CB58CB58CB58CB58CB58C938CB58C932027202720267CFD46FF%7626264B26272652527D524B269393B593B593B593B593B593B593B593B5%FD0593B593B593B593B593B593B5939393B5936F264B264B2076CFFD45FF%A85127265152A7A8FFFFFF762726938CB592B58CB592B58CB5926F4A4B26%27204B264B266F6E938CB592B58CB592938C9392938C4B262720274BA8A8%FD46FFA7A7A8FD06FFCA27274BB593B593B593B593B5936F262726272627%26272627264B4B6F92B593B593B59393929393934A272627205252A1FD4F%FFA84B202792B58CB58CB58CB58C4BF82720272027202720272027202720%4B68938C938CB58C9368938C4B20272026262651FD50FF5127266F93B593%B593B593B56F754B4B264B264B264B264B264B2627264B6FB5FD08932676%CF7D26272076CFFD4EFFA85220274AB58CB592B58CB592B56E4B26272027%262720272026204B262620274A938C938C938CB54A27A7FFFFA72026267D%A8FD4EFF51264A6F93B593B593B593B54B27264B2627264B2627262752A8%A8A87C512027276F92B593936E4B27FD04FFA1204B2676A8FD4CFFA85120%6F6E938CB58CB58CB54A272027202720272027202676FD06FF7D20262027%264B26272027A1FD04FF76204BF851A7FD4BFFCF27276FB593B593B593B5%6F272627264B264B264B26274BFD08FFA8262726272627264B267DFFCAA8%FFFF514B6F2051A7FD4AFF7C2726938CB592B58CB56F2720272627202726%27202720A1FD09FF7D2027202726272027277D262752FF76264A6F204BA7%FD48FFCF52204B93B593B593B5934B26274B4B2627264B2627264BFD0BFF%512627264B2627264B277D2627A1FF26274B6F2051A7FD46FFA8A726266E%B58CB58CB58C9320276E6F202720272027202627FD0BFF76262027202720%27202726272076FF4B20274A6FF851A8FD46FF512726B593B593B593B593%9993B5264B264B264B264B2651FD0CFF2727264B264B264B264B264B76FF%4B2726276F6F2076A8FD44FF7627206F8CB592B58CB592B58CB593272027%26272027262626FFFFA8274B4BA8FD05FF51202720272026202720262052%7D4B2027204B8C4B207DA8FD42FFA74B204B93B593B593B593B593B59393%2627264B2627264B2627A8FF274B202727A8FD04FF512726272051757551%755151264B262720274B936E274BCAFD41FFA75120276EB58CB58CB58CB5%8CB58CB56E272027202720272027207D76517D26202627FD04FF76F82720%279EC6C6C69EC79EC69E9F514BF84B8C934A2676FD40FFA87620276FB593%B593B593B593B593B59375264B264B264B264B26274B762651264B2627A7%FFFFFF7627264B9FFEC6FEC6C7C6C7C6C7C6C7C69F274B93932651A8FD3E%FFA87C20274AB58CB592B58CB592B58CB592B54A27262720272627202726%27272720272027207DFFFFFF76F8277BFE7A517BFEC6C7C0C79EC7C0C79E%C7264B8C4B20A1CFFD3CFFCFA7262726B593B593B593B593B593B593B593%4B204B2627264B2627264B264B264B2627264B7DFFFFFF51277BFEC64BF8%9FC6C6C6C7C6C7C0C7C6C7C6C7266F4A2776FD3DFFA8262626938CB58CB5%8CB58CB58CB58CB58C9326272027202720272027202720272027264B26FF%A97D274B7AFEA4FE5127A4C6C6C6A4C6C6C69EC79EC69E7B206F2051A8FD%3CFF5127269393B593B593B593B593B593B593B56F27264B264B264B2627%264B26272627264B205152512675C6FEC6FEC67B7BFEC6FEC6FEC6FEC6FE%C6C7C6C7C651264B4BCFFD3BFF7D27204B92B58CB592B58CB592B58CB592%B56E272627202726272051759F7A7B51514A514B755075519FC6FEFD04C6%9EC6C6FEC6FEC6FEC6C6C6FEC6C79EC77527204BA8FD3AFFCF7C202793B5%93B593B593B593B593B593B59393262726272627279FFD04FEC6FEC6FEC6%FEC6A59EFEC6FEC6FEC6FEC6FEC6FD07FEC6FEC6FEC6C7C6C7272727CAFD%3AFFCA272626B58CB58CB58CB58CB58CB58CB58CB58C934A4B202726C7C6%FEA4FEC6C6A4C6C6C6A4C6C6C6A4C6C6C6A4C6C6C6A4FD04C6FEC6FEC6FE%C6C6A4C6C6C69E51204BA7FD3AFFA851266F93B593B593B593B593B593B5%93B593B593B56F27269FC6FEC6FEC69F759F75C7C6C7C6C7C6FEC6FEC6FE%C6FEC6FEC6FEC6CCC6FD05FEC6FEC6FEC6C7752727CFFD3AFFA826276E93%8CB592938CB592B58CB592B58CB592936E27204B9EC6C6C6754B20202027%26759EC7C0C7A4FD10C6FEC6FEFD04C69E9F26277DFD3AFFA74B206F9393%92B5939392B593B593B593B59393934B26274BC7C0C79F4B4B754B272027%26517BC7C6C7C6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEFEFEC6FEC6C7%9E4B267DFD3AFFA826264A938C938C938C9368938C9368938C938C932027%202775C69EC79EC69EC77A4B202720274AC7C6C6A4C6C6C6A4C6C6C6A4C6%C6C6A4C6C6C6A4FEC6C6A4C69EC7262652FD3AFFA851206FFD0993B59393%93B59393934B264B264B75C7C6C7C6C7C6C7C651264B2627279FC6C7C6C7%C6FEC6FEC6FEC6FEC6FEC6FEC6CCC6FEC6FEC6C7C6512076FD3BFF4B2626%938C938C938C938C938C938C938C938C936E4B202720274AC7C6C79EC7C6%FEA44B2027202720519EC7C0C7A4FD0EC6FEC6C7C0C7262651FD3AFFCF7C%204B6E93939392939393929393939293939392B5936F4A272627269F75C7%C0C7C6FE9F4B2627264B264B75C7C6C7C0C7C6C6C6FEC6FEC6FEC6FEC6FE%C6FEC6C7C6512076FD3BFF7D27206F8C938C9368938C9368938C9368938C%9368938C936E4B2026204B4AC6A4C6C6FE5027202720272026269FC6C69E%C79EC6A4C6C6C6A4C6C6C6A4C6C6C69EC7262051FD13FFA8FD28FF512726%FD1493B5934B264B26277BCCC6FEC6FE4B6F4B4B264B6F4B26759FC7C6C7%C6C7C6C7C6C7C6C7C6C7C6C7C6C7C14B207CFD12FFA1A17CA1A7FD24FFCF%A726264A938C938C938C938C938C938C938C938C938C938C93926F202720%4BC6FEC6C6C69F4A938C6F264B684B20274A9FC6C69EC7C0C79EC7C0C79E%C7C0C79E9F262676FD0FFFA8A74B27202720274B7DA8FD22FFA876204B6E%B59393929393939293939392939393929393939293936F2627269FC6FEC6%FEC6754BB593B54B6F934B2027265175C7C6C7C6C7C6C7C6C7C0C7C6C775%2726A7FD0EFFCA7D2627264B4A4B26272052A7FD22FFA74BF84B8C938C93%68938C9368938C9368938C9368938C9368938C6F20264AC6A4C6C6FE9E4B%8CB58CB56E6F8C4B20272027264B4A9F9EC69EC6C6C69EC69E4BF84BA7FD%0DFFA8A726264A938C938C934A4BF84BA1FD22FF7D4B2075FD189326279F%FEC6FEFEFE754B93B593B593B5936F264B2627274B264B275151754B7551%4B262752FD0FFF76274BB593B5939393B5934B2051A8FD22FF7626206F92%938C938C938C938C938C938C938C938C938C938C938C6F2051C6C6C6FEC6%FE264B8CB592B58CB5926F202720759E274A6F444B20262026202627A8FD%0EFFA87C206F8CB592938C938C938C4B2076A8FD22FF5227266F93939293%939392939393929393939293939392939393924B26C7C6FEFEFEC6A5266F%93B593B593B5934B202751C7754B6FB5924B264B4B7676A8CFFD0FFF7C27%4BB593B59393929393936E2727CAFD22FFCF5126206F8C9368938C936893%8C9368938C9368938C9368938C93682751FEA4C6C6FEA475206F8C938C93%8C6F2027264B9EC65027684B202652CFA8FD12FFA1204B8CB58CB58C9368%938C93202676FD23FFCF5127266F93B5FD1393B54B4BC6FEC6FEFEFEC651%206F6F93936F26519FC7C1C7C6C7514B26274BCFFD14FFA84B26B593B593%B5FD05936F2076CFFD23FFCF5127204B8C938C938C938C938C938C938C93%8C938C938C938C932075FD05C6FEC651F827264B267BFD04C67551C6A526%2626A7CFFD14FFCF27276FB58CB592B58C938C936E2727A8FD25FF764B20%4B6EB5939392939393929393939293939392939393924B27C6C6FEC6FEC6%FEC67B2627519FC6C7C6C7752727FEC6512076CFFD16FF76206F93B593B5%93B592939393264BA8FD26FF7D4B202644938C938C938C9368938C938C93%8C9368938C6F202751FEA4C6C6C6A4C6C6A5504B262720272026269FC6C6%262651FD17FF76264AB58CB58CB58C9368938C4B20A7FD25FFA87D272626%27274B6E9393B5FD04936F6F939393B593934A4B264B9EFEC6FEC6FEC6FE%C6FEC6A57B7B757B9FFEC6FE7527267DFD17FFA1264B93B593B593B5FD04%934A4B7DFD24FFA8512027271314132727204B4A93689392934A4B4A6F4A%4B26272027204BA4FD08C6FEC6C6C6FEC6C6C6FE7B272051A8FD17FF7D27%26B592B58CB592938C938C4B20A7FD23FFA87620270D1514141415140D27%27264B4A6F4A6F2027262720272627264B2675C6C7C6C6C6FEC6FEC6FEC6%FEC6FEC6FE7B4B204B7DFD18FFA1264B93B593938C9393939293264BA7FF%FFFFA8CFA8CFA8FD1AFFA876F8270D140E1414140E1414140D27202E052E%27272626202720272027202720759EC79EC6A4C6C6C6A4C6C6C6A4C65127%F8277CFD19FF51264AB58CB58C9368938C93682627A87D7D5151274B2752%76CFCFFD17FFA1264B0D151415FD07141B0D4B2714141514142E4B264B26%4B264B262720759FC7C6C7C6C7C6C7C6C79E7B27272652A7FD19FFA85126%9393B593B5FD05936F26514B4B20272027262720274BA8FD16FFCA272027%1514141415FD0714152E20202FFD04140C272027262720272627204B517B%9EC7C0C79E7B4B272027202776CFFD19FF7D204B92B58CB592938C938C93%26272026204B4A6F6E936F6F202627A8CFFD14FF522727FD041415141B15%1B1415141414152751205214151415142E264B2627264B26272627264B26%4B274B2027264B274B26274BA8FD18FF4B276FB593B593B593936E6F9327%266F6F9393B593B593B5939326274BCFFD13FFA727202E14140E14141514%15141514151414142E281320272EFD041413272620262027202720272026%20272027202E270D27262020267DA8FD15FF7C274AB58CB58CB58C938C93%266F266F6EB58CB58CB58CB58C938C93202676FD13FF7C204B1414141515%1B151B151B151B151B1415144B14152E4B272F1415141B1352274B264B26%4B264B264B264B264B132E271B2E512E27267CA8FD13FFA852209393B593%B593B59393936F2627269393B593B593B593B59393936F2651A8FD11FFCA%272027FD04141B1415141B1415141B14151414272E14140D2E2027281414%1B14142E52262620262026202620262E150D270D14272E0C272052A8FD12%FFA1204B92B58CB592B58CB58C934A27204B4A4B4A6F92B592B58C938C93%8C4B207DA8FD10FF7C2726FD04141B141B151B141B151B141B151B143527%14141514142E4B26510C1B151B141B132E275227512752131B1413271414%1427130D4B2052A8FD11FF51266FB593B593B593B593B5934B264B4B6F6E%6F6F9393B593B5929393B54A2751FD10FFA851F82E14140E151415141514%15141514151415141514270D140E1414140E2F2726202E0D141415141514%15141514151414262E1414141326140D272052A7FD0FFFA12726B58CB58C%B58CB58CB58C93264B8C938C938C938CB58CB58C9368938C6F2051A8FD0F%FFA8274B0C151415151B151B151B151B151B151B151B151B272E14141415%141B151B1352272726522E35131B151B14141352264BFD05142E271B134B%2052A8FD0EFF7D206F93B593B593B593B593B5934B6FB5FD0793B5FD0793%4B27CAFD0FFF762626FD04141B1415141B1415141B1415141B1414142E27%14141B1415141B1415141B0D2E27272026202727272027262E141B141514%14142727150D272052A8FD0DFF4B266FB58CB592B58CB592B58C93266F8C%938C938C938C938C938C938C938C93204BA8FD0EFFA876202E1415141B14%1B151B141B151B141B151B141B1435134B141B141B151B141B151B141B15%1B14140D2F2E2F2E350D1B151B141B151B14150D4B0D150D272052A8FD0B%FFA85120B593B593B593B593B593B56E4B93939293939392939393929393%9392B56F274BFD0FFFA826260C140D130C2E282E2E2E0C13141514151415%14152E0D262F141514151415141514151415141514151415141514151415%1415141514151414272714140D27F851A1CAA8FD08FFCA274B8CB58CB58C%B58CB58CB58C4B26938C9368938C9368938C9368938C938C4B2076A8FD0D%FFCF764B2652274B264B274B274B274B264B27522F14151B15142752271B%151B151B151B151B151B151B151B151B151B151B151B151B151B151B151B%15142735141B1451204B51CFFD08FFA84B26B593B593B593B593B593B526%6FFD0993B5FD05936F264BA1FD0CFFCFA84B262027272E0C131314141514%1514140D2E272726270C1B142E26271415141B1415141B1415141B141514%1B1415141B1415141B1415141B1415141B142E26141415142720204BCFFD%07FFCA272692B592B58CB592B58CB54A4B8C938C938C938C938C938C938C%93926F204B2052A8FD0BFFCF4B27262E0D15141B141B151B141B151B141B%151B14142E4B2735144B2614151B141B151B141B151B141B151B141B151B%141B151B141B151B141B151B141B14272E1514142735272651FD07FFA852%269393B593B593B593B5934B4B9392B593939293939392B593936E4B266F%934B26A1FD0BFF5226202F14140E14141514151415141514151415141514%15142F272726260C15141514151415141514151415141514151415141514%15141514151415141514152E271414272F1413202051CFFD05FFCF4B264A%B58CB58CB58CB58C6F2027204B4A6F6E9368936E6F4A4B262620938CB54A%2651CFFD09FFA84B205214141415151B151B151B151B151B151B151B151B%151B151B0D512052151B151B151B151B151B151B151B151B151B151B151B%151B151B151B151B151B151526352E52151B1513264B7CFD06FF7D204B93%B593B593B593B5264B4B272027264B264B27272627264B6FB593B5939926%51A8FD08FFA87C20270D1414140E130C2E272E272E272E0C131415141514%1B14151414142E26141415141B1415141B1415141B1415141B1415141B14%15141B1415141B1415141B142E202E1414141B142F204BA8FD05FF7D2720%938CB592B58CB56F2720936E6F4A4B2627204B4A4B6E9392B58CB592B592%4B26A8FFA8FFA8FD05FF4B26271514142E27264B4A6F4A6F6E6F4A6F4B4B%27520D14141B15151414142E271B151B141B151B141B151B141B151B141B%151B141B151B141B151B141B151B141B14260C151414141B132651FD07FF%4B274BB593B593B56F4B6F276EB5939392939393929393B593B593B593B5%93B5264BA7FFA7275151A1A8FFA727202F142E204B6E938CB58CB58CB58C%B58CB58C93686F4A520CFD06142727151415141514151415141514151415%1415141514151415141514151415141514152727FD051427204B7DFD05FF%A87620276EB58CB58C939293204B8C938C938C938C9368938CB58CB58CB5%8CB5922620A8FF7C27202726527DA7264B142F209393B593B593B593B593%B593B593936F936F6F4A4B272E272E2E2E27272752272E2E2F0D14141B15%1B151B151B151B151B151B151B151B151B151B151B15132013141414354A%4B204B7DFFFFFFA876264B274B93B593B593B5934B4AB5FD0993B593B593%B593B5936F2052A8FF7D20274A4BF82727262713206F8CB592B58CB592B5%8CB592B58C936F4B264B264B4A6F4A6F686F6E6F6E6F6E6F446F4A4B2027%272F131B1415141B1415141B1415141B1415141B1415141B142727141413%26936E4BF82752CFA75220264AB54A4B8CB592B58C934A2768938C938C93%8C938C9392B58CB592B58C93262652FFFFA84B2093936F2627264B274B93%B593B593B593B593B593B593B593B593B593B593B593B593B593B593B593%B593B593B593936E6F4A27272F141B141B151B141B151B141B151B141B15%1B141B2E271414276F92B5934B2027515120276FB593B593B593B593B592%6F266F929393939293939392B593B593B5939326274BCFFFFFFF51202093%8C934A2720266EB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB5%8CB58CB58CB58CB58CB58CB58CB58CB58CB56E6F2027270D141514151415%141514151415141514151414202E276F8C9368938C4B2026F8276EB58C93%8CB58CB58CB58C936E27204B68938C9368938C938C938C938C6F202626A7%CFFFFFFFCA27274BB593B56F4B26B593B593B593B593B593B593B593B593%B593B593B593B593B593B593B593B593B593B593B593B593B593B593B56F%4B26512E1B151B151B151B151B151B151B151B1552206FFD0593B5937526%4B93B593B593B593B593B593B5936F264B264B4B9393B593B593B593936F%4B262726A7FFFFFFA8A87D7620276E938CB592938CB592B58CB592B58CB5%92B58CB592B58CB592B58CB592B58CB592B58CB592B58CB592B58CB592B5%8CB592B58CB592934A26272F141B1415141B1415141B1415141B13276EB5%8C938CB592B56E6F92B58CB592B58CB592B58CB58C934A274A932627264B%4A6F4A6F4A4B2626206F2627A1FFFFFFA8FD0427264B939392B593B593B5%93B593B593B593B593B593B593B593B593B593B593B593B593B593B593B5%93B593B593B593B593B593B593B593B5934B20270D1B151B141B151B141B%151B141B27266EB5939392B593B593B593B593B593B593B593B5FD04934A%6F93936E6F4B4B20272627264B4B93934B27A8FFFFFFA127204B2627F84B%8C938CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB5%8CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58C9320262714%141514151415141514151413202644938C938CB58CB58CB58CB58CB58CB5%8CB58C9368938C4B4A938C938C93689368936E938CB58C93204BA7FFFFFF%CA274B93936F4B264B939393B593B593B593B593B593B593B593B593B593%B593B593B593B593B593B593B593B593B593B593B593B593B593B593B593%B593B593B54B272713151B151B151B1515141B154B274B4AB5939393B593%B593B593B593B593B593B5FD0493266FFD0793B593B593B593B56F2751FD%04FFA852209392B58C934A6F8C938C938CB592B58CB592B58CB592B58CB5%92B58CB592B58CB592B58CB592B58CB592B58CB592B58CB592B58CB592B5%8CB592B58CB592B56E4B202E141B1415FD05141B2E2E0D274A938C938C93%8CB592B58CB592B58CB592938C9392274AB58C938C938C938C9392B58CB5%924BF87CCFFD04FF7D274AB593B593B59393929393B593B593B593B593B5%93B593B593B593B593B593B593B593B593B593B593B593B593B593B593B5%93B593B593B593B593B593B593B5934B202E1415FD081427150D274A9392%FD0493B593B593B593B593B5939392B54B276EB593939293939392B593B5%936F204BA7FD05FFCF4B204A938CB58CB58C938CB58CB58CB58CB58CB58C%B58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58C%B58CB58CB58CB58CB58CB58CB58CB58C4B2027FD04140EFD04141314140D%2720938C938C938CB58CB58CB58C9368938C938C9320276E938C938C938C%938C936E4B202652CFFD06FFA7264B6F9393B593B593B593B593B593B593%B593B593B593B593B593B593B593B593B593B593B593B593B593B593B593%B593B593B593B593B593B593B593B593B593B5936F205214141415141414%1B15141415132726FD0493B593B593B5FD09936F26274B6F6F936F6F6F75%4B4B202752CFFD07FFA87CF84B6E938CB592B58CB592B58CB592B58CB592%B58CB592B58CB592B58CB592B58CB592B58CB592B58CB592B58CB592B58C%B592B58CB592B58CB592B58CB592B58CB5924B202EFD071415FD04140D27%20938C938C938C938C938C938C938C938C9392934A27202720272026F826%204B52CFFD07FFCFFFA876204B939392B593B593B593B593B593B593B593%B593B593B593B593B593B593B593B593B593B593B593B593B593B593B593%B593B593B593B593B593B593B593B59293934B2035FD0B14150C27269393%939293939392939393929393939293939326272627204B27514B7DA8FD09%FFA852525127F84B8C9368938CB58CB58CB58CB58CB58CB58CB58CB58CB5%8CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58CB58C938C93%8C938C938C938C938C9368936E26201414140E1414140E1414140E142826%26938C9368938C9368938C9368938C938C93262626FD047DA8A8CFA8FD0A%FFA85220272627264BFD0593B593B593B593B593B593B593B593B593B593%B593B593B593B593B593B593B593B593B593B593B593B593B593B5FD0D93%B56F27271514151414141514141415141527274BB5FD0E934B2726A7FD13%FF7627266F4A4B266F8C938C938CB592B58CB592B58CB592B58CB592B58C%B592B58CB592B58CB592B58CB592938C938C938C938C938C938C938C938C%938C938C938C938C938C938C934A262EFD0D1426276E938C938C938C938C%938C9392932627267DA8FFFFFFCFFD0FFFCF27276FB593B593B592B593B5%93B593B593B593B593B593B593B593B593B593B593B593B593B593939293%9393929393939293939392939393929393939293939392B5939392B59393%26271315141514141415141414151413264B939392B5939392B593939293%2727267C7D7D7C7D7DFD10FFA87D20274A938CB58CB58CB58CB58CB58CB5%8CB58CB58CB58CB58CB58CB58CB58CB58CB58C938C938C9368938C936893%8C9368938C9368938C938C938C93686F6E6F4A4B264B264B4A4B20270C0D%0C2F0C0D0C2F0C0D0C2F0C27204B6E6F4A6F6E6F4A6F6E6F202720272026%2026F852A8FD10FFCAA12627266F93B593B593B593B593B593B593B593B5%93B593B593B593B593B593B5FD1393B593B593934B4B264B262720272027%202720272027202620272026202720262027202620272627202720272027%20272027262720272627202752FD12FFA87D2626204B4A6F8C9392938C93%8C938C938C938CB592B58CB592938C938C938C938C938C938C938C938C93%8C938C938C9392936E6F4A2720272026264B2751517C5276517652765176%527651765276517652765176527651765276517652765176527651765276%51765276517DA8FD12FFA8A8514B2027264B4A6F6F9392939393929393B5%93B593B59293939392939393929393939293939392939393929393936E6F%4B272027264B4B7C7DA8A8FFCAFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFF%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFA8FD%14FFA8CF7D762627F8262027264B4A6F8C9368938C938C938C9368938C93%68938C9368938C9368938C938C938C93686F2626F826264B517DA7CFA8FD%4AFFCFCF7D7C4B4B264B6FFD1D936F6F264B2027275276A8A8FD52FFAECF%762720274A9392938C938C938C938C938C938C938C938C938C9392938C93%6E4B26272026265176A7A8FD58FF7D522627266F6F9392B5939392939393%9293939392B593936E6F4B4B26272027265276A8A8FD5CFFA87D2726F827%204B4A6F6E6F68936E93686F6E4B4A4B26262026F827265276A7A8FD61FF%CF7C76272720272627264B2627264B2627202720272651517C7DCFCAFD66%FFA8A87D764B512727264B2627264B4B51517C7CA7A8FFCFFD6EFFA8CFA8%A8A7CAA8A8A8CFA8FDDBFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp12 Bn%AI5_BeginGradient: (Copper Radial)(Copper Radial) 1 4 Bd[0<0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B2C2D2D2E2F2F303131323333343536><242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263><0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B>1 %_Br<00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F10111112121313141515161617181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959><3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5><636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5><2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030303030303031313131313131313232323232323232323333333333333333343434343434343435353535353535353536363636363636363737373737373737383838383838383839393939393939393A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D>1 %_Br<595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E><B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9EAEB><F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E0><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F>1 %_Br[0 0.04 0.14 0 1 51.0204 0.395812 %_BS%_0 0.04 0.14 0 1 51.0204 0.395812 Bs0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs0.35 0.71 0.96 0.24 1 50 78.0899 %_BS%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs0.43 0.92 0.88 0.56 1 50 100 %_BS%_0.43 0.92 0.88 0.56 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Desert Sunset)(Desert Sunset) 0 6 Bd[<38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F7F7F80808080818181818282828282><5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5><2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F>01 %_Br<1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738><4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657><5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E>01 %_Br<050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D1E1E1F><2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F3F40><7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554535252>01 %_Br<0000000000000000000101010101010101010101010101010101020202020202020202020202020202020303030303030303030303030303030304040404040404040404040404040405050505050505050505><7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B><9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C7B7B7A><0303020202020202020202020202020202020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000>1 %_Br<05050505050505050404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A><DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E><2928282726262524242322222121201F1F1E1D1D1C1B1B1A191918181716161514141312121111100F0F0E0D0D0C0B0B0A0A0908080706060504040303>1 %_Br[0.51 0.71 0.31 0 1 50 100 %_BS%_0.51 0.71 0.31 0 1 50 100 Bs0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs0.12 0.25 0.32 0 1 50 53.6679 %_BS%_0.12 0.25 0.32 0 1 50 53.6679 Bs0.02 0.17 0.48 0 1 48 38.764 %_BS%_0.02 0.17 0.48 0 1 48 38.764 Bs0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs0.02 0.57 0.86 0.16 1 50 0 %_BS%_0.02 0.57 0.86 0.16 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[00 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 1 1 50 0 %_BS%_0 0 0 1 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient)(Linear Gradient) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient)(Radial Gradient) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 Bs0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Soft Black Vignette)(Soft Black Vignette) 1 3 Bd[0.20.20.211 %_Br0.20.20.211 %_Br[0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs0.2 0.2 0.2 1 1 50 100 %_BS%_0.2 0.2 0.2 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 17)(Unnamed gradient 17) 0 6 Bd[<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br[0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 18)(Unnamed gradient 18) 1 6 Bd[<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br[0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 20)(Unnamed gradient 20) 0 2 Bd[<0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F4041424343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F8081828383848586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF><000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F70707172737374757676777879797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD><000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6>1 %_Br[0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 21)(Unnamed gradient 21) 0 5 Bd[<04050505050505050505050505060606060606060606060606070707070707070707070707070808080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111111111111111111111111112121212121212121212121212121212121212121212121212121212121212121212121212121213131313131313131313131313131313><E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A69686867676665656464636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F4F4E4E4E4D4D4C4C4B4B4B4A4A49494948484847474646464545454444444343434342424241414141404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D><FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1414141414141414141414131313131313131313131313131313121212121212121212121212121211111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090808080808080808080808080808070707070707070707070707070707060606060606060606060606060605050505050505050505050505050504><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5><EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A19191919191919191919191919191919191919191918181818181818181818181818181818181818181717171717171717171717171717171717171717171616161616161616161616161616161616161616151515151515151515151515151515151515151515141414141414><848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C0B0B0A0A09080807070605050404030202010100><131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED>0.0000311 %_Br<C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F4041414242434344444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F8080818182838384><424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A191919181818181717171616161515151514141413131313>0.0000311 %_Br[0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 396)(Unnamed gradient 396) 1 2 Bd[0.0000310.0000310.0000310.0000311 %_Br[0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 72)(Unnamed gradient 72) 0 2 Bd[<CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECE><09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F202122222324242526272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F40404142424344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2>1 %_Br[0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs0.798978 0.033753 1 0.00119 1 50 0 %_BS%_0.798978 0.033753 1 0.00119 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Fish Pattern)(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [%AI3_Tile(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 96.7959 m157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 cf142.3477 90.6719 m142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C146.54 80.6494 142.3477 85.1709 142.3477 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 96.7959 m79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 cf64.5654 90.6719 m64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.874 64.1396 m13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c14.7539 66.1064 13.874 65.2266 13.874 64.1396 cf28.7969 58.0156 m28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c30.8857 52.1611 26.1396 47.416 20.2861 47.416 c19.9326 47.416 19.585 47.4355 19.2412 47.4688 C24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.6563 64.1396 m91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c95.5889 65.2266 94.709 66.1064 93.623 66.1064 c92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 cf106.5781 58.0156 m106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c103.9219 68.6152 108.668 63.8691 108.668 58.0156 c108.668 52.1611 103.9219 47.416 98.0684 47.416 c97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 31.4824 m157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 cf142.3477 25.3594 m142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C151.5596 35.9395 151.2109 35.959 150.8584 35.959 c145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C146.54 15.3359 142.3477 19.8574 142.3477 25.3594 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 31.4824 m79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 cf64.5654 25.3594 m64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C73.7773 35.9395 73.4297 35.959 73.0762 35.959 c67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-3886.5 4750.4351 m-3672.8999 4750.4351 L-3672.8999 4742.6343 L-3886.5 4742.6343 L-3886.5 4750.4351 Ln0 O0 0 0 1 k-3886.5 4746.5352 m-3876.4856 4749.0269 -3869.6863 4750.375 -3857.7007 4750.4351 c-3844.7185 4750.5 -3779.6997 4750.4351 y-3714.6816 4750.5 -3701.6997 4750.4351 v-3689.7124 4750.375 -3682.9136 4749.0269 -3672.8999 4746.5352 C-3682.9136 4744.0435 -3689.7124 4742.6953 -3701.6997 4742.6343 c-3714.6816 4742.5688 -3779.6997 4742.6343 y-3844.7185 4742.5688 -3857.7007 4742.6343 v-3869.6863 4742.6953 -3876.4856 4744.0435 -3886.5 4746.5352 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7759 8623 m-7661.2451 8623 L-7661.2451 8602.2842 L-7759 8602.2842 L-7759 8623 Ln0 O0 g1 XR-7661.5586 8618.3184 m-7676.8247 8604.5303 -7694.5537 8625.4492 -7709.9277 8613.166 C-7708.4199 8607.5137 -7702.7598 8614.4678 -7700.5176 8609.8213 C-7700.4341 8608.2207 -7703.6313 8609.7207 -7703.5127 8607.6006 C-7701.6245 8604.1914 -7696.8955 8604.6885 -7695.5664 8608.7373 C-7689.3115 8606.7676 -7682.7734 8600.8242 -7676.7847 8602.6172 C-7675.2671 8603.9678 -7676.0708 8605.1514 -7675.6211 8606.4277 C-7668.2871 8601.9922 -7659.4644 8611.1279 -7661.5586 8618.3184 Cf-7705.2842 8619.9326 m-7705.8247 8620.3086 -7704.9277 8621.4199 -7705.2529 8621.9082 C-7707.3237 8621.1563 -7709.6919 8617.0781 -7711.4731 8614.3105 C-7711.2632 8615.8398 -7712.6641 8617.1641 -7714.0781 8614.9326 C-7714.2383 8614.1152 -7713.3667 8613.8281 -7713.6729 8612.9365 C-7714.8306 8611.3682 -7715.8472 8612.8535 -7716.7798 8612.625 C-7717.3184 8611.8613 -7717.6143 8611.2188 -7717.6816 8610.6943 C-7711.5537 8607.874 -7704.9263 8619.6768 -7698.7456 8620.1025 C-7698.9048 8623.1152 -7702.8555 8624.8008 -7705.2842 8619.9326 Cfuu0 XR-7702.1602 8614.6602 m-7717.0142 8608.1201 -7738.4731 8612.3418 -7754.3687 8612.3193 c-7760.2988 8612.3125 -7749.8965 8612.3213 -7755.8267 8612.3262 cN0 O0 g-7699.8052 8613.4395 m-7717.1475 8606.2637 -7736.9341 8611.0557 -7755.0532 8610.9863 C-7755.8608 8611.873 -7756.6685 8612.7617 -7757.4751 8613.6475 C-7756.6973 8613.6475 -7755.9194 8613.6465 -7755.1421 8613.6533 C-7754.3345 8612.7656 -7753.5273 8611.8789 -7752.7202 8610.9922 C-7753.3516 8611.002 -7753.9844 8610.9951 -7754.6157 8610.9951 c-7756.3735 8610.998 -7760.9165 8613.6621 -7757.0376 8613.6572 c-7756.4063 8613.6572 -7755.7734 8613.6641 -7755.1421 8613.6533 c-7753.4155 8613.626 -7748.8184 8611.0234 -7752.7202 8610.9922 c-7753.4976 8610.9834 -7754.2759 8610.9863 -7755.0532 8610.9863 c-7756.8081 8610.9854 -7761.3574 8613.6328 -7757.4751 8613.6475 c-7740.1177 8613.7148 -7721.1025 8609.0137 -7704.5151 8615.8789 c-7703.1035 8616.4639 -7697.8081 8614.2666 -7699.8052 8613.4395 c-7699.8052 8613.4395 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 2)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7741 8623 m-7759 8623 L-7759 8605 L-7741 8605 L-7741 8623 Lnuu0 Ap0 O0 0 0 1 k-7740.9658 8615.4375 m-7759 8615.4375 L-7759 8612.5625 L-7740.9658 8612.5625 L-7740.9658 8615.4375 L-7740.9658 8615.4375 LfUu0.15 1 0.9 0.1 k-7740.9658 8614.7002 m-7757.5 8614.7002 L-7757.5 8613.3008 L-7740.9658 8613.3008 L-7740.9658 8614.7002 L-7740.9658 8614.7002 LfUu0 1 1 0 k-7740.9658 8614.3125 m-7756.5 8614.3125 L-7756.5 8613.6865 L-7740.9658 8613.6865 L-7740.9658 8614.3125 L-7740.9658 8614.3125 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 3)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7741 8623 m-7759 8623 L-7759 8605 L-7741 8605 L-7741 8623 Lnuu0 Ap0 O0 0 0 1 k-7741 8615.4375 m-7759 8615.4375 L-7759 8612.5625 L-7741 8612.5625 L-7741 8615.4375 L-7741 8615.4375 LfUu0.15 1 0.9 0.1 k-7741 8614.7002 m-7759 8614.7002 L-7759 8613.3008 L-7741 8613.3008 L-7741 8614.7002 L-7741 8614.7002 LfUu0 1 1 0 k-7741 8614.3125 m-7759 8614.3125 L-7759 8613.6865 L-7741 8613.6865 L-7741 8614.3125 L-7741 8614.3125 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7758.8833 8622.9551 m-7667.0479 8622.9551 L-7667.0479 8618.6758 L-7758.8833 8618.6758 L-7758.8833 8622.9551 Ln0 O0 0 0 1 k-7758.6631 8620.2754 m-7759 8620.3418 -7758.4814 8620.5313 -7758.8833 8620.3887 C-7758.8379 8620.2705 -7758.7725 8620.1816 -7758.6631 8620.2754 Cf-7668.1675 8620.4414 m-7669.2524 8621.2041 -7670.6816 8620.4336 -7671.8701 8620.9199 C-7672.0098 8620.9521 -7671.8345 8620.502 -7672.1484 8620.6025 C-7673.3008 8621.1953 -7675.1162 8620.8418 -7676.5195 8620.3848 C-7676.4346 8620.2666 L-7676.7017 8620.1816 -7677.0283 8620.5723 -7677.3115 8620.5176 C-7677.3135 8620.4395 -7677.2207 8620.4063 -7677.2861 8620.2988 C-7677.3574 8620.5352 -7677.7983 8620.4082 -7677.9185 8620.584 C-7678.0303 8620.4922 -7678.0195 8620.3047 -7678.1641 8620.2012 C-7678.3262 8620.4697 L-7678.7769 8621.1094 -7679.4209 8620.4258 -7680.0361 8620.7559 C-7680.0063 8620.6934 -7679.9453 8620.6445 -7679.9941 8620.584 C-7680.9814 8620.9727 -7682.2168 8620.9004 -7683.3208 8621.043 C-7683.2769 8620.9482 -7683.2363 8620.7754 -7683.3008 8620.668 C-7683.3555 8620.9512 -7683.6963 8621.0225 -7683.9922 8621.0781 C-7684.1255 8620.7871 -7684.4995 8621.3438 -7684.8467 8621.1836 C-7684.8169 8621.1191 L-7685.0732 8621.4238 -7685.1973 8620.9434 -7685.4053 8621.3086 C-7685.5684 8621.0801 L-7685.6807 8621.4902 -7685.9395 8620.8672 -7686.1514 8621.0762 C-7686.1445 8621.1602 L-7686.3442 8621.2598 -7686.4482 8621.0537 -7686.6338 8621.123 C-7686.6514 8621.0762 L-7687.0854 8621.1836 -7687.3379 8620.9551 -7687.3271 8621.2754 C-7687.4795 8621.0186 -7686.9063 8621.1582 -7687.1455 8620.7852 C-7688.5732 8621.1152 -7690.0459 8621.0508 -7691.4834 8621.0566 C-7691.6465 8620.9277 -7691.7505 8620.8887 -7691.7871 8620.7676 C-7691.9307 8620.832 -7692.3281 8620.8262 -7692.4585 8620.9902 C-7692.4102 8620.9834 -7692.5513 8620.8262 -7692.6274 8620.8105 C-7692.8887 8620.6895 -7692.9131 8621.1621 -7693.2002 8621.0186 C-7693.0859 8620.9336 -7693.0469 8620.8301 -7693.0854 8620.7109 C-7693.3301 8620.9609 -7693.6577 8620.9209 -7693.9473 8621.002 C-7693.9023 8620.9482 -7693.8325 8620.916 -7693.8433 8620.8154 C-7694.1602 8621.0986 -7694.4209 8620.7559 -7694.6982 8620.9346 C-7694.5947 8620.75 L-7695.0415 8620.5254 -7694.7266 8621.1367 -7695.1128 8621.0039 C-7695.02 8620.9453 -7695.0527 8620.873 -7695.0361 8620.7979 C-7695.3965 8621.1338 -7695.9795 8621.0225 -7696.3389 8621.1367 C-7696.3174 8621.1113 -7696.3232 8621.0605 Y-7696.7148 8621.1025 -7697.1245 8620.998 -7697.5552 8621.1445 C-7697.7119 8621.0625 -7697.5039 8620.6934 -7697.9185 8620.7617 C-7697.9033 8621.1328 -7698.6221 8620.9141 -7698.3779 8621.334 C-7698.7319 8621.2734 -7699.2925 8621.1338 -7699.5283 8621.2598 C-7699.3691 8621.1191 -7699.7007 8620.8066 -7699.4063 8620.7754 C-7699.6289 8620.5498 L-7699.5957 8620.3984 -7699.3999 8620.6016 -7699.4707 8620.4102 C-7699.6182 8620.4258 -7700.0479 8620.5723 -7700.1797 8620.5117 C-7700.4531 8620.7393 -7700.7041 8621.1641 -7701.1465 8621.2109 C-7700.9385 8621.0664 -7701.2646 8620.8018 -7701.1235 8620.7383 C-7701.7407 8621.4492 L-7701.8877 8621.4668 -7701.7725 8621.1563 -7701.9854 8621.2529 C-7701.9746 8621.3516 -7702.0674 8621.4121 -7702.1318 8621.4922 C-7702.1875 8621.4492 -7702.7441 8621.584 -7702.8081 8621.2188 C-7702.8735 8621.0762 -7702.5684 8621.1426 -7702.7314 8621.0117 C-7703.0029 8621.0156 -7703.0151 8621.1406 -7703.2871 8621.1465 C-7703.2925 8621.0977 L-7703.4717 8621.043 -7703.8213 8621.2529 -7703.6265 8621.4551 C-7703.5015 8621.4668 -7703.6738 8621.2354 -7703.4888 8621.3418 C-7703.6152 8621.5537 -7703.9312 8621.6133 -7704.2031 8621.6172 C-7704.1104 8621.5586 -7704.1216 8621.4609 -7704.0845 8621.3574 C-7704.4497 8621.6445 -7704.8369 8621.7354 -7705.2451 8621.8555 C-7705.2515 8622.0293 -7705.0928 8621.5391 -7705.0327 8621.6309 C-7705.5557 8621.3896 -7706.1128 8621.9727 -7706.5479 8621.6201 C-7706.4766 8621.5898 -7706.5098 8621.8672 -7706.5146 8621.8184 C-7706.7666 8621.7969 -7706.7549 8621.5449 -7706.9189 8621.6377 C-7706.9355 8621.4902 -7707.1255 8621.6855 -7707.2944 8621.7305 C-7707.3818 8621.8369 -7707.3384 8621.6582 -7707.1914 8621.6426 C-7707.4268 8621.7676 -7708.3691 8621.9941 -7708.9131 8621.7793 C-7708.9023 8621.877 -7709.2471 8622.1377 -7709.3721 8622.127 C-7709.3232 8621.8984 L-7709.4375 8621.7617 -7709.7422 8621.918 -7709.7632 8621.7227 C-7710.0303 8622 -7708.7344 8621.4863 -7709.0957 8621.7002 C-7709.1895 8621.5098 -7709.5991 8622.0645 -7709.5215 8621.7529 C-7709.7725 8621.7617 -7710.0161 8622.0186 -7710.2559 8621.8047 C-7710.1865 8621.8418 -7710.0522 8621.4873 -7710.2549 8621.5039 C-7710.6123 8621.5449 -7710.3564 8621.6133 -7710.6465 8621.6895 C-7710.8281 8621.7832 L-7710.8398 8622.0059 -7711.1475 8621.7529 -7711.0146 8622.002 C-7711.0586 8621.8184 -7711.5337 8622.1152 -7711.4971 8621.7461 C-7711.4473 8621.4551 L-7711.6016 8621.4766 -7711.7002 8621.7617 -7711.8213 8621.8896 C-7711.8418 8621.8633 -7711.8823 8621.8047 -7711.8745 8621.7578 C-7711.8994 8622.2031 -7712.2432 8621.7207 -7712.4268 8622.0645 C-7712.7505 8621.9102 -7713.2495 8622.0508 -7713.4023 8621.7734 C-7713.6514 8621.9082 -7713.8784 8622.0684 -7714.1621 8621.9727 C-7714.1055 8621.9307 -7714.0283 8621.918 -7714.0122 8621.8223 C-7714.1904 8621.6914 -7714.2344 8621.8086 -7714.3975 8621.8809 C-7714.3608 8621.8145 -7714.7539 8621.6201 -7714.9521 8621.4629 C-7715.1992 8621.5957 -7715.1143 8621.8359 -7715.1392 8621.9824 C-7715.3652 8621.543 -7715.8379 8622.2656 -7716.1211 8621.8672 C-7716.0352 8621.8066 -7715.7598 8621.6514 -7715.9658 8621.541 C-7716.1919 8621.1025 -7716.4219 8621.8652 -7716.7861 8621.6543 C-7716.6968 8622.0186 L-7716.8594 8621.793 -7717.2334 8622.2305 -7717.1963 8621.8594 C-7717.3184 8621.9902 -7717.6265 8621.7383 -7717.5859 8622.0938 C-7718.1846 8621.793 -7719.0425 8622.2754 -7719.4102 8621.6377 C-7719.4961 8621.6973 -7719.7104 8621.6367 -7719.6665 8621.8193 C-7719.5239 8622.0176 -7719.4673 8621.6777 -7719.4141 8621.8125 C-7719.4912 8621.8232 -7719.5078 8621.9209 -7719.5161 8621.9697 C-7719.7021 8621.8887 -7719.8486 8621.8633 -7719.6729 8621.5674 C-7720.0869 8621.3477 -7720.1001 8622.1719 -7720.6274 8622.0332 C-7720.6035 8621.8857 -7720.6436 8621.8301 -7720.7979 8621.8535 C-7721.0903 8622.1055 L-7721.4312 8622.0469 -7721.2842 8621.7705 -7721.2925 8621.5215 C-7721.4746 8621.5645 -7721.6973 8621.5527 -7721.7803 8621.7383 C-7722.0015 8621.4258 L-7721.8398 8621.6514 -7722.1514 8621.5762 -7722.2368 8621.6367 C-7722.1514 8621.5762 L-7722.1846 8621.4697 -7722.3955 8621.5352 -7722.5024 8621.5664 C-7722.4766 8621.7207 -7722.2617 8621.7832 -7722.1445 8621.8281 C-7722.2373 8621.9375 -7722.3823 8621.9121 -7722.5059 8622.041 C-7722.4648 8621.7969 -7722.8027 8621.8672 -7722.9473 8621.8418 C-7723.1133 8621.7891 -7723.1348 8622.0605 -7723.1831 8622.0527 C-7723.1875 8621.9258 -7723.4541 8622.0313 -7723.3247 8621.8535 C-7723.2681 8621.8125 -7723.1953 8621.9766 -7723.1016 8621.8652 C-7723.2109 8621.7705 -7723.1982 8621.5498 -7723.4258 8621.7109 C-7723.5967 8621.832 -7723.3818 8622.1934 -7723.7061 8622.0391 C-7723.6211 8621.9785 -7723.6055 8621.8809 -7723.5391 8621.793 C-7723.8433 8621.666 L-7723.8564 8621.8887 L-7723.8975 8621.832 -7723.8691 8621.8125 -7723.8877 8621.7832 C-7723.9785 8622.0176 -7724.3521 8621.8555 -7724.4209 8622.1191 C-7724.5742 8622.1426 -7724.7441 8621.9648 -7724.8906 8621.9395 C-7724.8623 8621.9199 L-7725.0415 8621.7891 -7725.2793 8621.875 -7725.4297 8622.0254 C-7725.4219 8621.9766 L-7725.5195 8621.959 -7725.7505 8621.9941 -7725.8735 8622.125 C-7726.1201 8621.957 -7725.9561 8621.2842 -7726.2295 8621.5645 C-7726.48 8621.5723 -7726.6221 8621.9727 -7726.5215 8622.1152 C-7726.9717 8621.9648 -7727.4834 8622.3281 -7727.9009 8621.9824 C-7727.9658 8622.0723 -7727.9248 8622.1289 -7728.0586 8622.1816 C-7728.7197 8622.0938 -7729.4551 8622.4453 -7729.9814 8622.0078 C-7729.79 8621.9141 -7729.9688 8621.7852 -7729.9727 8621.6582 C-7730.1309 8621.8574 -7730.1631 8621.4512 -7730.2197 8621.793 C-7730.2041 8621.9941 -7730.2197 8622.0918 -7730.0337 8622.1729 C-7730.4282 8622.2813 -7731.0283 8622.2813 -7731.2471 8622.0938 C-7731.1377 8622.1865 -7731.2227 8622.248 -7731.3086 8622.3086 C-7731.2803 8621.9873 -7731.5713 8621.9395 -7731.7915 8622.0527 C-7731.8223 8622.248 L-7731.9658 8622.0469 L-7732.0503 8622.1094 -7732.0591 8622.457 -7732.2773 8622.2695 C-7732.2891 8622.1934 -7732.3018 8622.1162 -7732.3418 8622.0605 C-7732.5693 8622.2207 -7732.8906 8622.4922 -7733.1377 8622.3262 C-7733.3398 8622.041 L-7733.4453 8622.0723 -7733.6235 8622.2441 -7733.4375 8622.3262 C-7733.8594 8622.1543 -7734.1309 8622.1328 -7734.2646 8621.8857 C-7734.9912 8622.4873 -7736.0459 8622.5117 -7736.8906 8622.4688 C-7736.8652 8622.3223 L-7737.0923 8622.1855 -7736.9834 8622.5781 -7737.1416 8622.4766 C-7737.0684 8622.3369 -7737.3145 8622.1729 -7737.1362 8622.002 C-7737.4609 8621.8477 -7737.5547 8622.2559 -7737.7656 8622.3223 C-7737.7979 8622.5146 -7737.5957 8622.1992 -7737.6367 8622.4434 C-7737.6729 8622.5117 -7738.0859 8622.293 -7738.1362 8622.584 C-7738.2178 8622.4697 -7738.1543 8622.2559 -7738.1104 8622.1377 C-7738.3086 8622.2793 L-7738.5513 8621.9395 -7737.7559 8621.6719 -7738.0107 8621.2529 C-7738.1934 8621.2988 L-7738.3682 8620.9941 -7737.71 8620.9551 -7738.1689 8620.8506 C-7738.3682 8620.9941 -7738.5381 8621.416 -7738.3608 8621.5449 C-7738.7754 8621.625 -7738.5527 8622.2383 -7738.9985 8622.2139 C-7739.1201 8622.043 -7738.6416 8622.1729 -7738.7275 8621.9336 C-7738.9375 8621.6992 -7739.1484 8622.0645 -7739.3354 8621.9824 C-7739.1279 8622.0918 -7739.3032 8622.3857 -7739.4375 8622.4395 C-7739.6641 8622.3018 -7739.29 8622.1641 -7739.6113 8622.1338 C-7739.6641 8622.3018 -7739.9595 8622.4277 -7739.7041 8622.5449 C-7739.8203 8622.9258 -7740.0381 8622.4395 -7740.2129 8622.7344 C-7740.3174 8622.4668 -7739.8823 8622.1152 -7740.2354 8621.9814 C-7740.1792 8622.2393 -7740.6704 8622.332 -7740.4839 8622.7148 C-7740.6221 8622.6406 -7740.6367 8622.4375 -7740.5361 8622.2793 C-7740.7334 8622.1201 -7741.0151 8622.75 -7741.0801 8622.2383 C-7741.1479 8622.502 L-7741.21 8622.416 -7741.2983 8622.3516 -7741.3994 8622.209 C-7741.5732 8622.2041 -7741.96 8622.5664 -7741.9443 8622.168 C-7742 8622.209 -7742.3975 8622.1914 -7742.2441 8622.4668 C-7741.9971 8622.6348 -7741.96 8622.2656 -7741.8223 8622.6377 C-7741.9971 8622.334 -7742.1787 8622.6777 -7742.3213 8622.7793 C-7742.3447 8622.625 L-7742.4297 8622.6855 -7742.6255 8622.6514 -7742.6787 8622.8184 C-7742.6133 8622.7305 -7742.6475 8622.625 -7742.7148 8622.5879 C-7742.8042 8622.8223 L-7743.1494 8622.9395 -7742.8857 8622.4102 -7743.2217 8622.4785 C-7742.9663 8622.2969 L-7743.0225 8622.3359 -7743.1367 8622.1162 -7743.2979 8622.1895 C-7743.3604 8622.4033 -7743.4775 8622.6602 -7743.5313 8622.8262 C-7743.7207 8622.9199 -7743.6162 8622.585 -7743.8027 8622.8047 C-7743.5586 8622.5469 L-7743.5215 8622.4766 -7743.7231 8622.1934 -7743.9761 8622.1992 C-7744.1377 8622.2734 -7744.3887 8622.582 -7744.1338 8622.6992 C-7744.2607 8622.7031 -7744.4385 8622.5723 -7744.3379 8622.416 C-7744.6255 8622.4902 -7744.2998 8622.6465 -7744.5479 8622.7793 C-7744.6494 8622.6367 -7744.9658 8622.4336 -7745.1563 8622.2266 C-7744.8975 8621.8682 L-7745.0693 8621.8652 L-7744.8467 8621.5781 -7745.1826 8621.6465 -7745.0566 8621.3438 C-7745.1743 8621.2969 -7745.3169 8621.3994 -7745.4307 8621.4785 C-7745.0864 8621.9629 -7745.8159 8622.1406 -7745.7158 8622.582 C-7746.1875 8622.7031 -7746.0107 8621.5078 -7746.5024 8622.1992 C-7746.4219 8622.3145 -7746.6533 8622.6504 -7746.3564 8622.5225 C-7746.6494 8622.4746 -7746.5557 8622.9658 -7746.9014 8622.7832 C-7746.6455 8622.6016 -7747.1763 8622.3359 -7746.8066 8622.0723 C-7746.8311 8622.2188 -7746.6001 8622.1836 -7746.5435 8622.1426 C-7746.6641 8621.9727 -7746.5186 8621.6973 -7746.8184 8621.6973 C-7747.0015 8621.7393 -7747.2524 8621.748 -7747.2158 8621.9785 C-7747.2085 8622.2314 -7746.9365 8621.9512 -7747.0537 8622.207 C-7747.4185 8622.2949 -7747.4795 8621.9102 -7747.6304 8622.3594 C-7747.3999 8622.3232 -7747.3423 8622.584 -7747.3467 8622.7578 C-7747.6143 8622.8633 L-7747.5625 8622.6953 L-7747.9922 8622.5742 -7747.6895 8623 -7748.1055 8622.9551 C-7748.3008 8622.623 L-7748.2017 8622.3369 -7747.6953 8622.75 -7747.7695 8622.2842 C-7748.04 8622.2656 -7748.1299 8622.502 -7748.3848 8622.3818 C-7748.3281 8622.3418 -7748.2505 8622.3301 -7748.1943 8622.2891 C-7748.2915 8622.2734 -7748.3877 8621.6563 -7748.7734 8622.0176 C-7748.9727 8622.1582 -7748.8262 8622.1836 -7748.8311 8622.3574 C-7749.2656 8622.4102 -7749.3955 8622.5879 -7749.6753 8622.6152 C-7749.6177 8622.2754 -7750.1699 8622.582 -7749.8608 8622.2344 C-7749.7188 8622.4336 -7749.0903 8622.4141 -7748.9365 8622.0898 C-7749.0947 8621.6865 -7748.5952 8622.1465 -7748.5024 8621.7383 C-7748.8506 8621.7285 -7748.8335 8621.332 -7748.8896 8621.0723 C-7748.9863 8621.0537 -7749.0801 8621.1641 -7749.1377 8621.2041 C-7749.1787 8621.4492 -7749.0522 8621.4453 -7749.0449 8621.6973 C-7749.4336 8621.6309 -7749.8081 8621.7676 -7750.0225 8622.0059 C-7750.1523 8621.8848 -7750.1113 8621.6406 -7749.9575 8621.6172 C-7750.4199 8621.6895 -7750.9141 8621.6563 -7751.3535 8621.582 C-7751.0693 8621.9814 -7751.8433 8621.6758 -7751.6494 8622.0078 C-7751.4141 8622.0977 -7751.2119 8622.3818 -7751.3418 8622.5605 C-7751.4888 8622.5352 -7751.3369 8622.3857 -7751.3984 8622.3008 C-7751.5859 8622.5186 -7751.6895 8621.9512 -7751.8735 8622.2949 C-7751.4512 8622.166 -7751.7915 8621.8086 -7751.7139 8621.4961 C-7752.0186 8621.6719 -7751.7007 8621.2734 -7752.0024 8621.2734 C-7752.3057 8621.4473 -7752.6787 8621.584 -7753.0161 8621.6514 C-7753.4399 8621.3555 -7754.0898 8621.6465 -7754.4683 8621.6582 C-7754.6665 8621.5 -7754.5322 8621.1465 -7754.7471 8621.085 C-7754.9995 8621.0918 -7754.5601 8621.4668 -7754.9336 8621.3047 C-7754.8975 8621.2344 L-7755.0107 8621.3164 -7755.5825 8620.9941 -7755.6929 8621.502 C-7755.5776 8621.1191 L-7755.6475 8621.084 -7755.7119 8621.1719 -7755.7695 8621.2129 C-7755.7725 8621.0879 -7755.8535 8620.9746 -7755.7402 8620.8926 C-7755.9707 8620.6289 -7756.2241 8620.9346 -7756.4746 8620.9453 C-7756.3135 8621.1719 L-7756.7422 8621.3496 -7757.0293 8621.125 -7757.4443 8621.2041 C-7757.4316 8620.9824 L-7757.6787 8621.1152 L-7757.6182 8620.9004 -7757.8447 8620.7617 -7757.9751 8620.9414 C-7757.3335 8620.3984 L-7757.1553 8620.5293 -7757.5283 8620.666 -7757.4165 8620.8848 C-7757.3213 8621.0762 -7756.9375 8621.0156 -7756.8755 8620.8018 C-7757.0225 8620.7773 -7757.0293 8620.8262 -7757.1436 8620.9063 C-7757.1919 8620.5977 -7756.9688 8620.6094 -7756.8584 8620.4033 C-7756.9355 8620.416 -7757.0449 8620.3223 -7757.0615 8620.4199 C-7756.9102 8620.2695 -7756.7578 8620.2461 -7756.5059 8620.2383 C-7756.6763 8620.3594 -7756.4131 8620.4297 -7756.4775 8620.5176 C-7756.4575 8620.2461 -7756.2168 8620.1621 -7755.9053 8620.2383 C-7755.6831 8620.5527 -7755.3208 8620.0361 -7754.96 8620.123 C-7755.1064 8620.3984 -7755.2935 8620.6191 -7755.5127 8620.7305 C-7755.2861 8620.8682 -7755.2607 8620.7227 -7755.0337 8620.8613 C-7754.9238 8620.6563 -7754.8457 8620.3418 -7754.5503 8620.2168 C-7754.5342 8620.4199 L-7754.2666 8620.3164 -7754.2666 8620.0156 -7753.9258 8620.0723 C-7753.3418 8620.1719 -7752.7407 8620.1719 -7752.2949 8620.1973 C-7752.2783 8620.3994 L-7752.0303 8619.9658 -7751.4521 8620.2393 -7751.1182 8620.0469 C-7750.5503 8620.2422 -7749.8848 8619.8535 -7749.5938 8620.2031 C-7748.5913 8620.0469 -7747.7148 8619.8945 -7746.6768 8619.9688 C-7746.8516 8620.2637 L-7746.6655 8620.0469 -7746.7305 8620.4336 -7746.5479 8620.3896 C-7746.7578 8620.1543 -7746.2949 8620.084 -7746.1665 8619.9033 C-7745.7041 8620.1328 -7745.1104 8619.8828 -7744.7007 8619.6758 C-7744.6846 8619.8789 L-7744.2705 8619.498 -7743.7759 8619.832 -7743.2598 8619.8945 C-7743.2007 8619.9785 -7743.1074 8620.1689 -7742.9536 8620.1465 C-7742.6738 8619.8184 -7742.5273 8619.8418 -7742.1167 8619.6367 C-7741.8169 8619.6367 -7741.3301 8619.7178 -7741.0254 8619.8457 C-7739.8975 8619.3848 -7738.7456 8619.6797 -7737.5732 8619.4023 C-7737.4888 8619.6406 L-7736.3521 8619.1309 -7734.9541 8619.5938 -7733.9839 8619.332 C-7734.0776 8619.7393 L-7733.7734 8619.8652 -7733.3843 8619.6328 -7733.4619 8619.3438 C-7733.1567 8619.4688 -7732.7007 8619.1465 -7732.5068 8619.4814 C-7732.1953 8619.5566 -7732.1255 8619.293 -7731.8662 8619.2383 C-7731.2422 8619.3926 -7731.0107 8619.3574 -7730.4224 8619.2813 C-7730.5684 8619.2559 L-7730.6328 8619.3457 -7730.6387 8619.5186 -7730.4922 8619.5449 C-7730.2725 8619.4316 -7729.6846 8619.6543 -7729.9033 8619.168 C-7729.2754 8619.4492 -7728.4385 8618.9395 -7727.8271 8619.3184 C-7727.8789 8619.1855 -7727.7246 8619.1602 -7727.6602 8619.0703 C-7727.1089 8619.0645 -7726.5293 8619.3359 -7726.0898 8619.1094 C-7726.0024 8619.1758 -7726.2295 8619.3359 -7726.0049 8619.3496 C-7725.8721 8619.2988 -7726.0024 8619.1758 -7725.8384 8619.1016 C-7724.9453 8618.8535 -7724.0303 8619.3574 -7723.2188 8619.293 C-7721.7754 8619.0361 -7720.2695 8619.166 -7718.8867 8619.123 C-7718.9023 8619.2207 L-7718.4395 8618.8477 -7717.8159 8619.6025 -7717.4463 8619.041 C-7717.3369 8619.1338 -7717.0283 8619.085 -7717.1094 8619.2734 C-7716.7407 8619.0098 -7716.0771 8619.5215 -7715.5439 8619.1865 C-7715.5928 8619.1777 -7715.6211 8619.1973 -7715.6777 8619.2393 C-7715.1392 8619.4551 -7714.6641 8619.1602 -7714.0957 8619.3555 C-7714.1533 8619.3975 -7714.2583 8619.4277 -7714.2754 8619.5254 C-7714.0557 8619.7129 -7713.7549 8619.1133 -7713.6348 8619.584 C-7713.5088 8619.5801 -7713.5449 8619.3477 -7713.6221 8619.3613 C-7712.3779 8619.5449 -7711.0498 8619.2441 -7709.7549 8619.1367 C-7708.8271 8619.418 -7709.6982 8619.9297 -7708.9663 8619.5781 C-7708.9063 8619.6689 -7708.9229 8619.3984 -7708.9131 8619.4961 C-7708.6299 8619.3643 -7708.4717 8620.0215 -7708.2754 8619.7754 C-7708.3564 8619.4863 -7708.1445 8619.6133 -7708.1387 8619.4375 C-7707.5713 8619.625 -7707.4575 8619.8857 -7707.0098 8619.666 C-7707.0435 8619.8184 L-7706.5186 8619.3887 -7705.9102 8619.6191 -7705.4673 8619.123 C-7702.5728 8619.0332 -7699.7983 8618.7578 -7696.9761 8618.7002 C-7694.1865 8618.7949 -7691.4551 8618.5723 -7688.6221 8618.8359 C-7687.9585 8619.2354 -7687.9087 8619.2246 -7687.1797 8619.0625 C-7687.2095 8619.127 -7687.2549 8619.1426 -7687.2061 8619.2031 C-7687.1699 8618.875 -7686.6929 8619.1719 -7686.6235 8618.8594 C-7685.5762 8618.9199 -7684.6113 8618.8301 -7683.5337 8618.8281 C-7683.7041 8618.8633 -7683.7896 8619.1309 -7683.5869 8619.1094 C-7683.3755 8618.9004 L-7683.3408 8618.9922 L-7683.2021 8618.9434 -7683.0513 8618.7813 -7683.1943 8618.6758 C-7680.4873 8618.3926 -7677.8242 8619.0508 -7675.1729 8618.9697 C-7674.5435 8619.1064 -7673.6475 8618.9814 -7672.9629 8618.9141 C-7670.9355 8619.3516 -7669.1079 8619.7041 -7667.0479 8619.3984 C-7667.3169 8620.2461 -7668.1675 8620.4414 Vf-7758.2578 8620.2422 m-7758.1855 8620.4063 -7757.9497 8620.4961 -7758.1377 8620.7148 C-7758.1611 8620.5605 -7758.2822 8620.3887 -7758.2578 8620.2422 Cf-7751.9619 8621.9297 m-7751.9536 8621.8809 -7751.8721 8621.9961 -7751.8521 8622.0225 C-7751.9297 8622.0352 -7752.0024 8622.1729 -7752.0645 8622.0879 C-7751.9854 8622.0762 -7751.9976 8621.998 -7751.9619 8621.9297 Cf-7750.3521 8622.0273 m-7750.3765 8622.1729 -7750.7207 8622.2891 -7750.9238 8622.3066 C-7750.3521 8622.0273 Lf-7748.8521 8622.6289 m-7748.7227 8622.752 -7748.7583 8622.8193 -7748.9326 8622.8154 C-7748.9453 8622.7383 -7748.8877 8622.6992 -7748.8521 8622.6289 Cf-7748.7456 8622.2969 m-7748.6211 8622.293 -7748.5591 8622.3789 -7748.4985 8622.4629 C-7748.5029 8622.3369 -7748.7871 8622.541 -7748.7456 8622.2969 Cf-7745.4893 8622.7207 m-7745.4111 8622.709 -7745.2417 8622.5879 -7745.1689 8622.75 C-7745.2505 8622.6367 -7745.5498 8622.9346 -7745.4893 8622.7207 Cf-7743.9761 8622.5 m-7743.9272 8622.5098 -7743.9072 8622.5361 -7743.8506 8622.4961 C-7743.7607 8622.5625 -7743.8555 8622.6689 -7743.9312 8622.6826 C-7743.9761 8622.5 Lf-7716.4287 8621.9141 m-7716.5923 8621.9863 L-7716.5684 8621.8418 L-7716.4287 8621.9141 Lf-7704.3574 8621.9063 m-7704.1943 8621.8145 -7704.2441 8622.043 -7704.2168 8622.0645 C-7704.3643 8622.0801 -7704.1621 8621.8848 -7704.3574 8621.9063 Cf-7697.8486 8621.1777 m-7697.8984 8621.1816 L-7697.8818 8620.8828 L-7697.8486 8621.1777 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 5)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7741 8623 m-7759 8623 L-7759 8605 L-7741 8605 L-7741 8623 Lnuu0 Ap0 O0 0 0 1 k-7748.5625 8623 m-7751.4375 8623 L-7751.4375 8614.5 L-7751.4375 8613.4316 -7750.5684 8612.5625 -7749.5 8612.5625 C-7740.9165 8612.5625 L-7740.9165 8615.4375 L-7748.5625 8615.4375 L-7748.5625 8623 L-7748.5625 8623 LfUu0.15 1 0.9 0.1 k-7749.2998 8623 m-7750.7002 8623 L-7750.7002 8614.5 L-7750.7002 8613.8389 -7750.1621 8613.3008 -7749.5 8613.3008 C-7740.9165 8613.3008 L-7740.9165 8614.7002 L-7749.2998 8614.7002 L-7749.2998 8623 L-7749.2998 8623 LfUu0 1 1 0 k-7749.6875 8623 m-7750.3125 8623 L-7750.3125 8614.5 L-7750.3125 8614.0527 -7749.9482 8613.6865 -7749.5 8613.6865 C-7740.9165 8613.6865 L-7740.9165 8614.3125 L-7749.5 8614.3125 L-7749.6035 8614.3125 -7749.6875 8614.3975 -7749.6875 8614.5 C-7749.6875 8623 L-7749.6875 8623 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7732.9727 8623 m-7732.9727 8596.9717 L-7759 8596.9717 L-7759 8623 L-7732.9727 8623 Ln0 Ap0 R0.7084 0.636438 0.515526 0.381872 K1.125 w-7759 8605.6465 m-7732.9727 8605.6465 lS0.64 0.650477 0.701045 0.510735 K-7759 8614.3242 m-7732.9727 8614.3242 lS0.597742 0.537865 0.64184 0.350469 K0.375 w-7759 8609.9854 m-7732.9727 8609.9854 lS0 O0.597742 0.537865 0.64184 0.350469 k1 w-7737.5742 8610.0117 m-7737.3442 8609.7402 -7737.6914 8609.4541 -7738 8609.2432 c-7738.1118 8609.166 -7738.5215 8609.3789 -7738.7466 8609.2129 c-7739.0439 8608.9951 -7739.1826 8608.9082 -7739.4824 8608.9141 c-7739.6455 8608.918 -7740.0435 8609.0479 -7740.1895 8609.0781 c-7740.5679 8609.1543 -7740.8022 8609.3516 -7741.3672 8609.2549 c-7741.7344 8609.1914 -7741.8286 8609.1006 -7741.9233 8609.1484 c-7742.1118 8609.29 -7742.2202 8609.5137 -7742.4258 8609.5625 c-7742.9575 8609.6895 -7743.3535 8609.7334 -7743.8818 8609.7227 c-7744.3047 8609.7129 -7745.4185 8609.7813 -7746.2866 8609.6816 c-7746.6226 8609.6416 -7746.6025 8609.2168 -7746.7695 8609.2129 c-7746.8618 8609.2109 -7746.7646 8609.5264 -7746.8306 8609.5469 c-7747.1694 8609.6533 -7747.4702 8608.5029 -7747.6943 8608.5723 c-7747.8047 8608.6074 -7747.5562 8609.1533 -7747.6729 8609.1816 c-7747.8975 8609.2373 -7748.2178 8608.2188 -7748.4321 8608.2813 c-7748.5635 8608.3184 -7748.2886 8608.7383 -7748.4375 8608.8066 c-7748.6655 8608.9111 -7748.9087 8608.0352 -7749.1064 8608.1338 C-7749.1543 8608.1816 -7748.7295 8608.9375 -7749.1685 8608.8789 c-7749.2871 8608.8613 -7749.5054 8608.3135 -7749.5801 8608.3398 c-7749.6919 8608.3799 -7749.3535 8608.8018 -7749.4897 8608.9277 C-7749.7681 8609.1543 -7750.3711 8608.1631 -7750.4575 8608.2344 c-7750.5791 8608.3359 -7750.1279 8609.0977 -7750.2695 8609.166 C-7750.4497 8609.4297 -7751.0142 8608.5527 -7751.0889 8608.6016 c-7751.1777 8608.6602 -7750.9058 8609.0381 -7750.8799 8609.2334 c-7750.8545 8609.4277 -7750.9966 8609.5615 -7751.2144 8609.5098 c-7751.4736 8609.4473 -7751.8696 8608.6416 -7751.9727 8608.7354 C-7752.0791 8608.791 -7751.8682 8609.0781 -7751.7954 8609.3125 c-7751.7583 8609.4277 -7751.8882 8609.6016 -7752.0298 8609.6016 c-7752.3135 8609.6494 -7752.6255 8608.998 -7752.7065 8609.1025 c-7752.7524 8609.1621 -7752.5898 8609.4902 -7752.7295 8609.5879 c-7752.8994 8609.7061 -7753.3115 8609.2383 -7753.4521 8609.293 C-7753.5361 8609.3418 -7753.4126 8609.5967 -7753.4927 8609.6533 c-7753.7295 8609.8193 -7754.0039 8609.4209 -7754.0513 8609.4688 C-7754.1167 8609.4912 -7754.1201 8609.5361 -7754.2793 8609.6406 c-7754.4736 8609.7676 -7754.5254 8609.8486 -7754.5425 8609.9648 c-7754.5654 8610.083 -7754.3135 8610.375 -7754.1655 8610.3496 c-7753.8223 8610.29 -7753.8662 8610.8496 -7753.6328 8610.7158 c-7753.5679 8610.6797 -7753.6592 8610.2588 -7753.4199 8610.2656 c-7753.0488 8610.2783 -7752.9858 8610.8213 -7752.7817 8610.8105 c-7752.6406 8610.8037 -7752.8521 8610.1836 -7752.6328 8610.2607 c-7752.4751 8610.3164 -7752.0063 8611.3018 -7751.9795 8611.21 c-7751.8975 8610.9424 -7752.0703 8610.3984 -7751.9409 8610.4082 c-7751.7568 8610.4229 -7751.5078 8611.3174 -7751.2544 8611.4375 c-7751.1826 8611.4727 -7751.3774 8610.6006 -7751.1958 8610.5967 C-7751.0898 8610.6465 -7750.7578 8611.4492 -7750.6274 8611.498 C-7750.5591 8611.4824 -7750.5879 8611.125 -7750.5176 8611.1045 c-7750.4688 8611.0898 -7750.2817 8611.5654 -7750.21 8611.5234 c-7750.1055 8611.4629 -7750.2471 8610.9922 -7750.0889 8610.9229 c-7749.9175 8610.8486 -7749.4878 8611.8926 -7749.3486 8611.7979 c-7749.2769 8611.75 -7749.3574 8611.21 -7749.21 8611.2461 c-7749.0718 8611.2783 -7748.9414 8611.6143 -7748.8081 8611.6426 c-7748.7295 8611.6582 -7748.7935 8611.1914 -7748.7495 8611.1738 c-7748.5889 8611.1152 -7748.2329 8611.6719 -7748.0688 8611.5234 c-7747.8584 8611.335 -7747.9395 8610.9697 -7747.8345 8610.9824 c-7747.6274 8611.0059 -7747.4912 8611.2432 -7747.4146 8611.1836 c-7747.2642 8611.0684 -7747.3281 8610.7793 -7747.0527 8610.6924 c-7746.8975 8610.6426 -7746.7935 8610.9346 -7746.7495 8610.9307 c-7746.6738 8610.9277 -7746.6782 8610.8301 -7746.6665 8610.7246 c-7746.6328 8610.4609 -7746.6064 8610.3994 -7746.4878 8610.377 c-7746.0854 8610.3535 -7745.5625 8610.2842 -7745.1807 8610.2754 c-7744.6274 8610.2607 -7743.2607 8610.2373 -7743.1182 8610.2373 c-7743 8610.2129 -7742.7432 8610.3945 -7742.6689 8610.4609 c-7742.4678 8610.6455 -7742.2998 8610.8594 -7741.9858 8611.1201 c-7741.8906 8611.2012 -7741.8081 8611.1807 -7741.7378 8611.1563 c-7741.5249 8611.085 -7741.4585 8611.0332 -7741.2202 8611.002 c-7740.9175 8610.959 -7740.4272 8611.0488 -7740.1245 8611.1426 c-7739.6035 8611.3018 -7739.5264 8611.3242 -7739.0977 8611.2754 c-7738.6992 8611.2295 -7738.0586 8611.1582 -7738.0479 8610.8105 c-7738.0415 8610.5957 -7737.9414 8610.4434 -7737.5742 8610.0117 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7732.9722 8623 m-7732.9722 8596.9727 L-7759 8596.9727 L-7759 8623 L-7732.9722 8623 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7741.6455 8609.9893 m-7732.9736 8609.9893 lS-7745.9839 8623 m-7745.9839 8614.3242 lS0.7084 0.636438 0.515526 0.381872 K1.125 w-7741.7202 8605.6504 m-7732.9727 8605.6504 lS-7750.3232 8622.999 m-7750.3232 8613.6455 lS0.64 0.650477 0.701045 0.510735 K-7741.6504 8622.999 m-7741.6504 8620.5869 l-7738.9937 8620.3633 -7737.3096 8618.6602 v-7735.6064 8616.9336 -7735.3774 8614.3281 y-7732.9727 8614.3281 lS*u1 D0 O0.7084 0.636438 0.515526 0.381872 k1 w-7749.8418 8607.1855 m-7749.8418 8607.25 -7749.8218 8607.291 -7749.7783 8607.291 c-7749.6943 8607.291 -7749.4634 8606.9541 -7749.3994 8606.9541 c-7749.3154 8606.9541 -7749.2729 8606.9961 -7749.2729 8607.1016 c-7749.2729 8607.1855 -7749.5264 8608.0928 y-7749.5264 8608.1338 -7749.5264 8608.1338 -7749.5049 8608.1338 c-7749.4414 8608.1338 -7749.0615 8607.5869 -7748.9351 8607.5869 c-7748.9146 8607.5869 -7748.8936 8607.6074 -7748.8936 8607.6289 c-7749.1675 8608.5352 -7749.1675 8608.7256 v-7749.1675 8608.7891 -7749.1675 8608.8105 -7749.1465 8608.8105 c-7749.1055 8608.8105 -7748.6826 8608.2402 -7748.5562 8608.2402 c-7748.5352 8608.2402 -7748.5137 8608.2607 -7748.5137 8608.2822 c-7748.5137 8608.3457 -7748.7666 8609.084 -7748.7666 8609.252 c-7748.7666 8609.2949 -7748.7666 8609.2949 -7748.7446 8609.2949 c-7748.6826 8609.2949 -7748.4722 8609.084 -7748.4297 8609.084 c-7748.4082 8609.084 -7748.3882 8609.1055 -7748.3882 8609.126 c-7748.3882 8609.1465 -7748.4927 8609.5059 -7748.4927 8609.5898 c-7748.4927 8609.6113 -7748.4927 8609.6113 -7748.4722 8609.6113 c-7748.4297 8609.6113 -7748.0918 8609.252 -7748.0078 8609.252 c-7747.9658 8609.252 -7747.9233 8609.2949 -7747.9233 8609.3789 c-7747.9233 8609.5273 -7748.1138 8610.2441 -7748.1138 8610.2861 c-7748.1138 8610.3701 -7748.0918 8610.4121 -7748.0498 8610.4121 c-7747.9658 8610.4121 -7747.7119 8610.0957 -7747.6494 8610.0957 c-7747.5854 8610.0957 -7747.5439 8610.1162 -7747.5439 8610.1807 c-7747.5854 8610.6016 L-7747.5854 8610.666 -7747.5854 8610.6855 -7747.5654 8610.6855 c-7747.5225 8610.6855 -7747.2915 8610.3916 -7747.2065 8610.3916 c-7747.1006 8610.3916 -7747.1006 8610.877 -7747.1006 8610.9395 c-7747.1006 8611.0449 -7747.0166 8611.1289 -7746.8896 8611.1289 c-7746.8057 8611.1289 -7746.4678 8610.8975 -7746.4473 8610.8975 c-7746.3623 8610.8975 -7746.3198 8611.3398 -7746.2568 8611.3398 c-7746.1943 8611.3398 -7745.9199 8611.2129 -7745.8564 8611.2129 c-7745.6455 8611.2129 -7745.6035 8611.2988 -7745.6035 8611.4668 c-7745.6255 8611.6143 L-7745.6255 8611.6563 -7745.6035 8611.6563 -7745.5835 8611.6563 c-7745.4985 8611.6563 -7745.2241 8611.3818 -7745.1392 8611.3818 c-7744.9287 8611.3818 -7742.8198 8613.4492 -7742.5454 8613.7227 c-7742.3984 8613.8906 -7742.3984 8614.1865 -7742.3984 8614.3135 c-7742.3984 8615.1777 -7742.3984 8615.2617 -7742.2295 8615.3457 c-7741.5977 8615.5996 -7741.5127 8615.7471 -7740.7334 8617.0332 c-7740.6479 8617.1807 -7739.7407 8617.793 -7739.5942 8617.793 c-7739.4878 8617.793 -7739.1094 8617.5391 -7739.0239 8617.5391 c-7738.9194 8617.5391 -7738.8135 8617.6025 -7738.8135 8617.7705 c-7738.8135 8618.2139 -7739.3408 8618.7207 -7739.9312 8618.7207 c-7740.7534 8618.7207 -7741.0913 8618.0234 -7741.1338 8617.625 c-7741.1543 8617.4766 -7741.2393 8617.3916 -7741.3447 8617.3916 c-7741.3862 8617.3916 -7741.4287 8617.4121 -7741.4702 8617.4766 c-7741.9561 8618.2773 -7742.9473 8618.7207 -7743.7065 8618.7207 c-7744.7393 8618.7207 -7745.8774 8618.0879 -7746.3418 8617.8145 c-7746.7842 8617.5615 -7747.4814 8617.3916 -7747.8809 8617.3916 c-7748.3242 8617.3916 -7748.3662 8617.5391 -7748.3662 8617.793 c-7748.3662 8617.9404 -7747.9023 8618.3818 -7747.9023 8618.5098 c-7747.9023 8618.6357 -7748.0498 8618.7207 -7748.4082 8618.7207 c-7748.8936 8618.7207 -7749.5679 8618.0029 -7749.5679 8617.2236 c-7749.5679 8616.6113 -7748.7666 8616.085 -7748.3022 8616.085 c-7747.3755 8616.085 -7747.0942 8616.4434 -7746.5264 8616.9072 c-7746.4414 8616.9697 -7746.3774 8616.9922 -7746.3359 8616.9922 c-7746.1895 8616.9922 -7746.1895 8615.8945 -7746.1895 8615.7695 c-7746.1895 8615.6201 -7746.2729 8615.5576 -7746.3774 8615.5576 c-7748.7822 8615.5576 -7753.6592 8614.334 -7755.3672 8608.1777 c-7755.4297 8607.9658 -7755.5361 8607.8613 -7755.6406 8607.8613 c-7755.7881 8607.8613 -7756.7793 8608.7041 -7756.7793 8610.2861 c-7756.7793 8612.1201 -7755.5767 8613.0898 -7754.9873 8613.0898 c-7754.8398 8613.0898 -7754.6494 8613.0693 -7754.6494 8612.9209 c-7754.6494 8612.8584 -7754.6929 8612.7949 -7754.7759 8612.6895 c-7755.1143 8612.3535 -7755.3672 8611.7197 -7755.3672 8611.4033 c-7755.3672 8611.1914 -7755.2607 8611.0234 -7755.1143 8611.0234 c-7754.9033 8611.0234 -7754.5654 8611.9727 -7754.46 8612.1201 c-7754.3335 8612.3311 -7753.9546 8612.7109 -7753.2378 8613.2383 c-7752.4995 8613.7637 -7751.0654 8615.0723 -7751.0654 8616.3369 c-7751.0654 8617.709 -7752.1191 8618.6152 -7752.9209 8618.6152 c-7753.7007 8618.6152 -7754.6714 8618.0879 -7755.0713 8617.6025 c-7755.7041 8616.8652 -7756.3154 8616.2949 -7756.8218 8616.2949 c-7757.1592 8616.2949 -7757.3066 8616.5059 -7757.3066 8616.7168 c-7757.3066 8617.0537 -7757.0537 8617.2861 -7756.5479 8617.3281 c-7755.9575 8617.3711 -7755.8936 8617.793 -7755.8936 8618.1289 c-7755.8936 8618.4033 -7756.4209 8618.7207 -7756.8433 8618.7207 c-7757.4751 8618.7207 -7758.2974 8618.0234 -7758.2974 8616.1904 c-7758.2974 8614.6924 -7757.0537 8614.2295 -7756.5679 8614.2295 c-7756.1265 8614.2295 -7755.4722 8614.3135 -7755.0928 8614.6504 c-7753.8066 8615.8535 -7753.1318 8616.0625 -7752.5835 8616.0625 c-7752.3721 8616.0625 -7752.2881 8616.0625 -7752.2881 8616.2109 c-7752.2881 8616.5273 -7753.0474 8616.7168 -7753.1318 8616.7383 c-7753.3423 8616.8008 -7753.5103 8617.0332 -7753.5103 8617.2441 c-7753.5103 8617.7295 -7753.2378 8617.75 -7752.8774 8617.75 c-7752.5215 8617.75 -7751.8042 8617.3916 -7751.8042 8616.1904 c-7751.8042 8615.1992 -7752.9424 8614.0391 -7753.4058 8613.8076 c-7753.7007 8613.6377 -7754.5874 8613.6602 -7754.9458 8613.6172 c-7755.6406 8613.5322 -7757.4121 8612.585 -7757.4121 8610.0957 c-7757.4336 8608.6826 -7756.1265 8607.3555 -7755.8511 8607.166 c-7755.6826 8607.0586 -7755.5986 8606.9326 -7755.5986 8606.7637 c-7755.5986 8606.5527 -7755.6626 8603.6221 -7755.9995 8603.6221 c-7756.4424 8603.6221 -7756.5054 8603.6221 -7756.5054 8603.8135 c-7756.21 8604.9082 -7756.21 8605.1406 v-7756.21 8605.457 -7756.4424 8606.9326 -7757.3066 8606.9326 c-7757.5806 8606.9326 -7758.0449 8606.7002 -7758.0449 8606.3848 c-7758.0449 8606.0898 -7757.3486 8604.8877 -7757.3486 8604.6133 c-7757.3486 8604.1279 -7757.3921 8604.1074 -7758.0654 8603.4961 c-7758.2559 8603.3486 -7758.3193 8603.2227 -7758.3193 8603.0313 c-7758.3193 8602.8633 -7758.2134 8602.7354 -7758.0449 8602.7354 c-7757.8975 8602.7354 -7757.3281 8603.0117 -7757.2017 8603.0313 c-7757.0752 8603.0313 -7756.8433 8603.0527 -7756.6538 8603.0527 c-7756.2734 8603.0527 -7756.0845 8602.9258 -7756.0845 8602.7998 c-7756.0845 8602.5674 -7756.0845 8601.8936 -7756.9263 8600.4375 c-7757.1167 8600.1006 -7758.2974 8598.7725 -7758.2974 8598.4346 c-7758.2974 8598.2656 -7758.2134 8598.2461 -7758.1089 8598.2461 c-7757.9185 8598.2461 -7757.4966 8598.667 -7757.3706 8598.8145 c-7756.1265 8600.1426 -7755.3042 8601.5762 -7754.9238 8602.8418 c-7754.8398 8603.1582 -7754.7344 8603.0742 -7754.5654 8603.0957 c-7752.4155 8603.6016 -7750.3271 8606.1104 -7750.3271 8606.1318 c-7750.4326 8606.4053 -7750.4326 8606.4688 v-7750.4326 8606.5957 -7750.3271 8606.6172 -7750.3057 8606.6172 c-7750.2432 8606.6172 -7750.0527 8606.4053 -7750.0103 8606.4053 c-7749.9058 8606.4053 -7749.7783 8606.4902 -7749.7783 8606.6377 C-7749.8418 8607.1855 lf0 D-7753.1104 8605.6895 m-7752.5215 8605.6895 -7752.0986 8605.7949 -7751.6982 8606.0684 c-7751.6553 8606.0898 -7751.6138 8606.1104 -7751.5928 8606.1104 c-7751.5498 8606.1104 -7751.5498 8606.0898 -7751.5498 8606.0469 c-7751.5498 8605.626 -7753.4272 8603.666 -7754.5654 8603.666 c-7754.6289 8603.666 -7754.6714 8603.707 -7754.6714 8603.7695 c-7754.6714 8603.96 -7754.5874 8605.9629 -7754.2495 8605.9629 c-7754.1865 8605.9629 -7754.1016 8605.9414 -7754.0386 8605.9004 c-7753.7007 8605.752 -7753.4902 8605.6895 -7753.1104 8605.6895 cf-7752.5835 8608.4512 m-7752.5835 8608.0293 -7752.5625 8607.5654 -7751.8662 8607.5654 c-7751.2334 8607.5654 -7750.6431 8608.2197 -7750.4961 8608.3672 c-7750.4326 8608.4092 -7750.3906 8608.4297 -7750.3486 8608.4297 c-7750.3271 8608.4297 -7750.2847 8608.3877 -7750.2847 8608.3457 c-7750.2847 8607.9023 -7751.6553 8606.2373 -7753.0049 8606.2373 c-7753.2578 8606.2373 -7754.2705 8606.4053 -7754.2705 8606.9541 c-7754.2705 8607.207 -7753.8906 8608.5781 -7753.2793 8609.6533 c-7751.9087 8612.1416 -7747.7119 8613.7002 -7745.8145 8613.7002 c-7744.9072 8613.7227 -7744.6118 8613.4063 -7744.4863 8613.3848 c-7744.4648 8613.3848 -7744.4438 8613.3643 -7744.4233 8613.3643 c-7744.3174 8613.3643 -7744.1904 8613.4277 -7744.1904 8613.5752 c-7744.1904 8613.5967 -7744.2119 8613.5967 v-7744.3594 8614.7344 -7744.4014 8615.1357 -7744.4014 8616.3994 c-7744.4014 8617.793 -7744.4014 8617.9189 -7743.4321 8617.9189 c-7742.1455 8617.9189 -7741.8506 8616.8438 -7741.8506 8616.6113 c-7741.8506 8616.1904 -7742.4399 8615.8945 -7742.5889 8615.8945 c-7742.7358 8615.8945 -7742.9058 8616.002 -7742.9058 8616.1904 c-7742.9058 8616.4854 -7742.9473 8616.6328 -7743.2207 8616.6328 c-7743.4951 8616.6328 -7743.4951 8616.2744 -7743.4951 8616.168 c-7743.4951 8615.916 -7743.3896 8615.6631 -7743.1782 8615.5361 c-7742.7998 8615.2832 -7742.7998 8614.8828 -7742.7998 8614.6719 c-7742.7998 8614.5664 -7742.7998 8614.4395 -7742.8198 8614.334 c-7742.8418 8614.166 -7744.7817 8612.1201 -7745.0977 8612.1201 c-7745.2446 8612.1201 -7745.5615 8612.2666 -7746.4258 8612.2666 c-7748.5767 8612.2666 -7749.5474 8610.5391 -7749.7378 8610.0117 c-7749.9897 8609.2949 -7750.7915 8608.999 -7751.0225 8608.999 c-7751.2129 8608.999 -7751.2129 8609.042 -7751.2129 8609.4424 c-7751.2129 8609.5273 -7751.4238 8609.8633 y-7751.4238 8610.0537 -7750.3906 8610.3066 -7750.3906 8610.4961 c-7750.3906 8610.666 -7750.5801 8610.6855 -7750.7271 8610.6855 c-7750.8115 8610.6855 -7751.8882 8610.6855 -7752.3306 8609.8633 c-7752.5415 8609.4629 -7752.5835 8608.8945 -7752.5835 8608.4512 cf1 D-7748.4927 8606.1953 m-7748.4927 8606.1514 -7748.5137 8606.1318 -7748.5352 8606.1318 c-7748.5986 8606.1318 -7748.7666 8606.4688 -7748.8506 8606.4688 c-7748.9146 8606.4688 -7748.9995 8606.3848 -7749.0415 8606.2783 c-7749.0615 8606.1953 -7749.1255 8605.7305 -7749.21 8605.7305 c-7749.2524 8605.7305 -7749.4209 8605.9629 -7749.4634 8605.9629 c-7749.6104 8605.9629 -7749.7158 8605.7305 -7749.7158 8605.5215 c-7749.7158 8605.415 -7749.7783 8605.415 -7749.9263 8605.415 c-7750.5166 8605.415 -7752.1406 8603.2432 -7752.5625 8601.4922 c-7752.6055 8601.3242 -7752.5835 8601.1768 -7752.8994 8601.0703 c-7755.0713 8600.334 -7757.5176 8598.1816 -7757.5176 8598.0557 c-7757.5176 8597.9082 -7757.4336 8597.8242 -7757.3066 8597.8242 c-7757.2432 8597.8242 -7757.1592 8597.8242 -7756.6538 8598.1602 c-7755.7681 8598.751 -7753.7217 8600.0381 -7752.8994 8600.0381 c-7752.6265 8600.0381 -7752.6055 8599.6797 -7752.6055 8599.4258 c-7752.6055 8599.2354 -7752.6265 8599.0039 -7752.6265 8598.8574 c-7752.6465 8598.583 -7752.9634 8598.2656 -7752.9634 8598.0977 c-7752.9634 8597.9502 -7752.8154 8597.8447 -7752.6465 8597.8447 c-7752.4575 8597.8447 -7752.3306 8597.8662 -7752.1606 8598.0557 c-7751.8662 8598.3926 -7751.7402 8598.541 -7751.4238 8598.541 c-7751.1914 8598.541 -7750.1377 8597.8242 -7749.8838 8597.8242 c-7749.5679 8597.8242 -7749.1895 8598.3086 -7749.1895 8598.6045 c-7749.1895 8599.3418 -7750.0942 8599.9326 -7750.6431 8599.9326 c-7751.0225 8599.9326 -7751.4438 8599.8066 -7751.6353 8599.5742 c-7751.6982 8599.5098 -7751.7607 8599.4688 -7751.8242 8599.4688 c-7751.9937 8599.4688 -7752.1191 8599.9326 -7752.1191 8599.9746 c-7752.1191 8600.3975 -7749.2729 8600.459 -7748.9146 8600.459 c-7748.7666 8600.459 -7748.6401 8600.375 -7748.5352 8600.2061 c-7748.3447 8599.9121 -7747.1855 8598.6895 -7745.6255 8598.6895 c-7743.79 8598.6895 -7742.0825 8599.9521 -7742.0825 8601.8506 c-7742.0825 8601.957 -7742.1245 8602.5039 -7742.1245 8602.5264 c-7742.1245 8602.5898 -7741.0063 8604.3389 -7739.6782 8604.3389 c-7738.6245 8604.3389 -7738.2656 8603.75 -7738.2656 8603.2637 c-7738.2656 8603.0313 -7738.3711 8602.3789 -7738.8984 8602.3789 c-7739.1094 8602.3789 -7739.2144 8602.5898 -7739.2144 8602.9688 c-7739.2144 8603.0527 -7739.0039 8603.4326 -7739.0039 8603.5381 c-7739.0039 8603.5801 -7739.0239 8603.6016 -7739.0879 8603.6016 c-7739.4258 8603.6016 -7739.9521 8603.2432 -7740.1846 8602.5898 c-7740.4595 8601.873 -7740.8594 8601.1768 -7741.1958 8600.7754 c-7741.5127 8600.418 -7741.6182 8599.8262 -7741.6182 8599.4893 c-7741.6182 8599.0039 -7741.1338 8597.8447 -7739.4878 8597.8447 c-7738.2871 8597.8447 -7737.4434 8598.583 -7737.4434 8599.1943 c-7737.4434 8599.8066 -7737.7598 8600.1855 -7738.2026 8600.1855 c-7738.6455 8600.1855 -7738.9824 8599.8477 -7738.9824 8599.5098 c-7738.9824 8598.8359 -7739.1514 8598.6895 -7739.4878 8598.6895 c-7739.6992 8598.6895 -7739.8896 8598.8145 -7739.8896 8599.1309 c-7739.8896 8599.3633 -7739.8896 8599.7422 -7738.3711 8601.0078 c-7737.8857 8601.4082 -7737.4214 8602.1055 -7737.4214 8602.8848 c-7737.4214 8603.6445 -7738.4561 8604.8447 -7739.6362 8604.8447 c-7740.8594 8604.8447 -7741.6401 8604.0654 -7742.2515 8603.3486 c-7742.5454 8603.0117 -7743.9814 8601.3242 -7744.0439 8601.3018 c-7744.2334 8601.1543 -7744.3174 8601.0293 -7744.3174 8600.9023 c-7744.3174 8600.7969 -7744.2119 8600.6914 -7744.0854 8600.6914 c-7743.8535 8600.6914 -7742.9058 8601.6406 -7742.8198 8601.6406 c-7742.7568 8601.6406 -7742.7153 8601.5762 -7742.7153 8601.4922 c-7742.7153 8600.7334 -7743.8535 8599.2578 -7745.6255 8599.2578 c-7747.1006 8599.2578 -7747.9863 8600.375 -7747.9863 8600.418 c-7747.9863 8600.5439 -7747.8394 8600.6689 -7747.5225 8600.7334 c-7743.6426 8601.4717 -7740.3955 8605.0215 -7740.3955 8609.6377 c-7740.3955 8609.7441 -7740.2256 8609.7705 -7740.0786 8609.7705 c-7739.7202 8609.7705 -7739.0879 8609.8496 -7739.0879 8609.5762 c-7739.0879 8609.4697 -7739.1294 8609.3438 -7739.1934 8609.2168 c-7739.5518 8608.6465 -7739.8682 8608.4727 -7739.8682 8607.5215 c-7739.8682 8607.0586 -7739.4878 8606.5322 -7738.8984 8606.5322 c-7737.8657 8606.5322 -7737.4214 8607.5654 -7737.4214 8607.7969 c-7737.4214 8607.9658 -7737.5073 8608.0293 -7737.5903 8608.0293 c-7737.7178 8608.0293 -7738.2241 8607.502 -7738.3711 8607.502 c-7738.5615 8607.502 -7738.7085 8607.5439 -7738.7085 8608.0293 c-7738.7085 8608.3672 -7737.4214 8612.0781 -7737.4214 8612.8789 c-7737.4214 8613.4492 -7737.7598 8614.1455 -7738.6455 8614.6504 c-7738.6875 8614.6719 -7738.7085 8614.6924 -7738.7085 8614.7344 c-7738.7085 8614.8184 -7738.5615 8614.9248 -7738.4126 8614.9658 c-7737.8018 8615.1357 -7737.4214 8615.2412 -7737.4214 8616.1904 c-7737.4214 8616.5488 -7737.7598 8617.2236 -7738.0127 8617.2236 c-7738.2026 8617.2236 -7738.2026 8617.1807 -7738.2026 8616.8223 c-7738.2026 8616.6748 -7738.2446 8616.5693 -7738.3926 8616.4639 c-7738.7085 8616.2529 -7738.7295 8616.2109 -7738.8135 8615.7266 c-7738.8774 8615.4102 -7739.0039 8615.3242 -7740.1426 8614.6924 c-7740.5854 8614.4189 -7740.6904 8614.1865 -7740.7744 8613.9551 c-7740.8594 8613.7637 -7740.9233 8613.7637 -7741.4287 8613.7637 c-7741.9561 8613.7637 -7744.5073 8611.0449 -7744.5073 8610.918 c-7744.5073 8610.8555 -7744.3809 8610.5596 -7744.3809 8610.4961 c-7744.3809 8610.4336 -7744.4014 8610.3916 -7744.4438 8610.3916 c-7744.4863 8610.3916 -7744.6338 8610.6016 -7744.6758 8610.6016 c-7744.7817 8610.6016 -7744.7817 8610.4121 -7744.7817 8610.2637 c-7744.7817 8610.1602 -7744.5703 8609.5898 -7744.5703 8609.4424 c-7744.5703 8609.3584 -7744.5918 8609.2949 -7744.6338 8609.2949 c-7744.7178 8609.2949 -7744.9072 8609.7578 -7744.9922 8609.7578 c-7745.0342 8609.7578 -7745.0762 8609.7168 -7745.0762 8609.5898 c-7745.0762 8609.4424 -7744.8862 8608.7256 y-7744.8862 8608.6621 -7744.9072 8608.5566 -7744.9502 8608.5566 c-7745.0342 8608.5566 -7745.1826 8608.957 -7745.2666 8608.957 c-7745.3286 8608.957 -7745.3926 8608.873 -7745.3926 8608.7256 c-7745.3926 8608.6406 -7745.2446 8608.2197 -7745.2446 8608.1143 c-7745.2446 8608.0508 -7745.2666 8607.9863 -7745.3086 8607.9863 c-7745.3506 8607.9863 -7745.5835 8608.5996 -7745.7095 8608.5996 c-7745.7935 8608.5996 -7745.8994 8608.4922 -7745.8994 8608.3877 c-7745.8994 8608.3037 -7745.7729 8607.9453 -7745.7729 8607.8613 c-7745.7729 8607.8184 -7745.7729 8607.7969 -7745.7935 8607.7969 c-7745.8774 8607.7969 -7746.0254 8608.2822 -7746.1104 8608.2822 c-7746.3418 8608.2822 -7746.3623 8607.8613 -7746.3623 8607.6709 c-7746.3623 8607.5869 -7746.2998 8607.25 -7746.2998 8607.1855 c-7746.2998 8607.123 -7746.3198 8607.1016 -7746.3418 8607.1016 c-7746.4897 8607.1016 -7746.6782 8607.9023 -7746.8271 8607.9023 c-7747.0386 8607.9023 -7747.0386 8607.7129 -7747.0386 8607.4814 c-7747.0166 8606.9541 L-7747.0166 8606.9326 -7747.0386 8606.9121 y-7747.0586 8606.9121 -7747.1006 8606.9326 -7747.1226 8606.9961 c-7747.1855 8607.207 -7747.3115 8607.6289 -7747.5225 8607.6289 c-7747.6694 8607.6289 -7747.8174 8607.46 -7747.8174 8607.3135 c-7747.8174 8607.0801 -7747.7119 8606.7002 -7747.7119 8606.4688 c-7747.7119 8606.4053 -7747.7334 8606.3848 -7747.7754 8606.3848 c-7747.8608 8606.3848 -7747.9863 8606.8262 -7748.0278 8606.9121 c-7748.0918 8606.9961 -7748.1553 8607.0176 -7748.2192 8607.0176 c-7748.5352 8607.0176 -7748.5352 8606.7002 -7748.5352 8606.5527 C-7748.4927 8606.1953 lf0 D-7749.8633 8601.8301 m-7749.8633 8601.5977 -7751.8042 8601.4082 -7751.8662 8601.4082 c-7751.9722 8601.4082 -7752.0352 8601.4717 -7752.0352 8601.5762 c-7752.0352 8602.4414 -7750.2847 8604.6768 -7749.8633 8604.6768 c-7749.7998 8604.6768 -7749.7783 8604.6563 -7749.7783 8604.5928 c-7750.2002 8603.3486 -7750.2002 8603.0957 v-7750.2002 8602.7158 -7750.0942 8602.4629 -7749.9058 8602.041 c-7749.8838 8601.957 -7749.8633 8601.8936 -7749.8633 8601.8301 cf-7741.1338 8613.2793 m-7740.9858 8613.2793 -7740.4795 8612.7744 -7740.3325 8612.7744 c-7740.2065 8612.7744 -7740.0791 8612.8584 -7740.0791 8613.0059 c-7740.0791 8613.0898 -7740.2695 8613.5322 -7740.2695 8613.6377 c-7740.2695 8613.9961 -7739.8896 8614.293 -7739.5098 8614.293 c-7739.1094 8614.293 -7737.9702 8613.9756 -7737.9702 8612.752 c-7737.9702 8611.6563 -7738.3926 8611.6563 -7740.0366 8611.6563 c-7740.3955 8611.6563 -7742.0615 8611.8457 -7742.3145 8611.8457 c-7742.4399 8611.8457 -7742.4834 8611.6768 -7742.4834 8611.5498 c-7742.4834 8611.5088 -7742.4834 8611.4668 -7742.4614 8611.4453 c-7742.3984 8611.0664 -7742.1675 8610.5176 -7742.1675 8610.1377 c-7742.1675 8605.6895 -7746.2998 8601.8301 -7748.7666 8601.8301 c-7749.4209 8601.8301 -7749.6519 8602.6318 -7749.6519 8603.0527 c-7749.6519 8604.7822 -7747.6694 8605.8145 -7747.4175 8605.8145 c-7747.3545 8605.8145 -7747.3335 8605.7949 -7747.3335 8605.752 c-7747.3335 8605.71 -7747.3545 8605.668 -7747.3975 8605.626 c-7747.5225 8605.457 -7748.0498 8604.8447 -7748.0498 8604.2129 c-7748.0498 8603.875 -7747.7554 8603.4326 -7746.9951 8603.4326 c-7745.7305 8603.4326 -7745.1826 8604.7822 -7745.1826 8605.1406 c-7745.1826 8605.2891 -7745.2446 8605.499 -7745.4561 8605.499 c-7745.6035 8605.499 -7746.0049 8604.8447 -7746.1519 8604.8447 c-7746.2158 8604.8447 -7746.4473 8604.9717 -7746.5103 8604.9717 c-7746.5942 8604.9717 -7746.6582 8604.9512 -7746.7422 8604.9512 c-7746.8057 8604.9512 -7746.8481 8605.0137 -7746.8481 8605.1191 c-7746.8481 8605.4785 -7746.3623 8606.0469 -7745.8774 8606.3008 c-7744.9722 8606.7637 -7743.6226 8608.0928 -7743.6226 8609.5479 c-7743.6226 8609.9688 -7743.6846 8610.3701 -7743.6846 8610.707 c-7743.6846 8611.2559 -7742.7568 8612.1201 -7741.8081 8613.0059 c-7741.6401 8613.1533 -7741.3862 8613.2793 -7741.1338 8613.2793 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7732.9722 8623 m-7732.9722 8596.9727 L-7759 8596.9727 L-7759 8623 L-7732.9722 8623 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7741.6455 8609.9893 m-7732.9736 8609.9893 lS-7745.9839 8623 m-7745.9839 8614.3242 lS0.64 0.650477 0.701045 0.510735 K1.125 w-7741.7202 8605.6504 m-7732.9727 8605.6504 lS-7750.3232 8623 m-7750.3232 8613.6455 lS0.7084 0.636438 0.515526 0.381872 K-7741.6504 8623 m-7741.6504 8620.5869 l-7738.9937 8620.3633 -7737.3096 8618.6602 v-7735.6064 8616.9336 -7735.3774 8614.3281 y-7732.9727 8614.3281 lS*u0 O0.7084 0.636438 0.515526 0.381872 k1 w-7749.7783 8606.6377 m-7749.7783 8606.4902 -7749.9058 8606.4053 -7750.0103 8606.4053 c-7750.0527 8606.4053 -7750.2432 8606.6172 -7750.3057 8606.6172 c-7750.3271 8606.6172 -7750.4326 8606.5957 -7750.4326 8606.4688 c-7750.4326 8606.4053 -7750.3271 8606.1318 y-7750.3271 8606.1104 -7752.4155 8603.6016 -7754.5654 8603.0957 c-7754.7344 8603.0742 -7754.8398 8603.1582 -7754.9238 8602.8418 c-7755.3042 8601.5762 -7756.1265 8600.1426 -7757.3706 8598.8145 c-7757.4966 8598.668 -7757.9185 8598.2461 -7758.1089 8598.2461 c-7758.2134 8598.2461 -7758.2974 8598.2656 -7758.2974 8598.4346 c-7758.2974 8598.7725 -7757.1167 8600.1006 -7756.9263 8600.4375 c-7756.0845 8601.8936 -7756.0845 8602.5674 -7756.0845 8602.7998 c-7756.0845 8602.9258 -7756.2734 8603.0527 -7756.6538 8603.0527 c-7756.8433 8603.0527 -7757.0752 8603.0313 -7757.2017 8603.0313 c-7757.3281 8603.0117 -7757.8975 8602.7354 -7758.0449 8602.7354 c-7758.2134 8602.7354 -7758.3193 8602.8633 -7758.3193 8603.0313 c-7758.3193 8603.2227 -7758.2559 8603.3486 -7758.0654 8603.4961 c-7757.3921 8604.1074 -7757.3486 8604.1279 -7757.3486 8604.6133 c-7757.3486 8604.8877 -7758.0449 8606.0898 -7758.0449 8606.3848 c-7758.0449 8606.7002 -7757.5806 8606.9326 -7757.3066 8606.9326 c-7756.4424 8606.9326 -7756.21 8605.457 -7756.21 8605.1406 c-7756.21 8604.9082 -7756.5054 8603.8135 y-7756.5054 8603.6221 -7756.4424 8603.6221 -7755.9995 8603.6221 c-7755.6626 8603.6221 -7755.5986 8606.5527 -7755.5986 8606.7637 c-7755.5986 8606.9326 -7755.6826 8607.0586 -7755.8511 8607.166 c-7756.1265 8607.3555 -7757.4336 8608.6826 -7757.4121 8610.0957 c-7757.4121 8612.585 -7755.6406 8613.5322 -7754.9458 8613.6172 c-7754.5874 8613.6602 -7753.7007 8613.6377 -7753.4058 8613.8076 c-7752.9424 8614.0391 -7751.8042 8615.1992 -7751.8042 8616.1904 c-7751.8042 8617.3916 -7752.5215 8617.75 -7752.8774 8617.75 c-7753.2378 8617.75 -7753.5103 8617.7295 -7753.5103 8617.2441 c-7753.5103 8617.0332 -7753.3423 8616.8008 -7753.1318 8616.7383 c-7753.0474 8616.7168 -7752.2881 8616.5273 -7752.2881 8616.2109 c-7752.2881 8616.0625 -7752.3721 8616.0625 -7752.5835 8616.0625 c-7753.1318 8616.0625 -7753.8066 8615.8535 -7755.0928 8614.6504 c-7755.4722 8614.3135 -7756.1265 8614.2295 -7756.5679 8614.2295 c-7757.0537 8614.2295 -7758.2974 8614.6924 -7758.2974 8616.1904 c-7758.2974 8618.0234 -7757.4751 8618.7207 -7756.8433 8618.7207 c-7756.4209 8618.7207 -7755.8936 8618.4033 -7755.8936 8618.1289 c-7755.8936 8617.793 -7755.9575 8617.3711 -7756.5479 8617.3281 c-7757.0537 8617.2861 -7757.3066 8617.0537 -7757.3066 8616.7168 c-7757.3066 8616.5059 -7757.1592 8616.2949 -7756.8218 8616.2949 c-7756.3154 8616.2949 -7755.7041 8616.8652 -7755.0713 8617.6025 c-7754.6714 8618.0879 -7753.7007 8618.6152 -7752.9209 8618.6152 c-7752.1191 8618.6152 -7751.0654 8617.709 -7751.0654 8616.3369 c-7751.0654 8615.0723 -7752.4995 8613.7637 -7753.2378 8613.2383 c-7753.9546 8612.7109 -7754.3335 8612.3311 -7754.46 8612.1201 c-7754.5654 8611.9727 -7754.9033 8611.0234 -7755.1143 8611.0234 c-7755.2607 8611.0234 -7755.3672 8611.1914 -7755.3672 8611.4033 c-7755.3672 8611.7197 -7755.1143 8612.3535 -7754.7759 8612.6895 c-7754.6929 8612.7949 -7754.6494 8612.8584 -7754.6494 8612.9209 c-7754.6494 8613.0693 -7754.8398 8613.0898 -7754.9873 8613.0898 c-7755.5767 8613.0898 -7756.7793 8612.1201 -7756.7793 8610.2861 c-7756.7793 8608.7041 -7755.7881 8607.8613 -7755.6406 8607.8613 c-7755.5361 8607.8613 -7755.4297 8607.9658 -7755.3672 8608.1777 c-7753.6592 8614.334 -7748.7822 8615.5576 -7746.3774 8615.5576 c-7746.2729 8615.5576 -7746.1895 8615.6201 -7746.1895 8615.7695 c-7746.1895 8615.8945 -7746.1895 8616.9922 -7746.3359 8616.9922 c-7746.3774 8616.9922 -7746.4414 8616.9697 -7746.5264 8616.9072 c-7747.0942 8616.4434 -7747.3755 8616.085 -7748.3022 8616.085 c-7748.7666 8616.085 -7749.5679 8616.6113 -7749.5679 8617.2236 c-7749.5679 8618.0029 -7748.8936 8618.7207 -7748.4082 8618.7207 c-7748.0498 8618.7207 -7747.9023 8618.6357 -7747.9023 8618.5098 c-7747.9023 8618.3818 -7748.3662 8617.9404 -7748.3662 8617.793 c-7748.3662 8617.5391 -7748.3242 8617.3916 -7747.8809 8617.3916 c-7747.4814 8617.3916 -7746.7842 8617.5615 -7746.3418 8617.8145 c-7745.8774 8618.0879 -7744.7393 8618.7207 -7743.7065 8618.7207 c-7742.9473 8618.7207 -7741.9561 8618.2773 -7741.4702 8617.4766 c-7741.4287 8617.4121 -7741.3862 8617.3916 -7741.3447 8617.3916 c-7741.2393 8617.3916 -7741.1543 8617.4766 -7741.1338 8617.625 c-7741.0913 8618.0234 -7740.7534 8618.7207 -7739.9312 8618.7207 c-7739.3408 8618.7207 -7738.8135 8618.2139 -7738.8135 8617.7705 c-7738.8135 8617.6025 -7738.9194 8617.5391 -7739.0239 8617.5391 c-7739.1094 8617.5391 -7739.4878 8617.793 -7739.5942 8617.793 c-7739.7407 8617.793 -7740.6479 8617.1807 -7740.7334 8617.0332 c-7741.5127 8615.7471 -7741.5977 8615.5996 -7742.2295 8615.3457 c-7742.3984 8615.2617 -7742.3984 8615.1777 -7742.3984 8614.3135 c-7742.3984 8614.1865 -7742.3984 8613.8906 -7742.5454 8613.7227 c-7742.8198 8613.4492 -7744.9287 8611.3818 -7745.1392 8611.3818 c-7745.2241 8611.3818 -7745.4985 8611.6563 -7745.5835 8611.6563 c-7745.6035 8611.6563 -7745.6255 8611.6563 -7745.6255 8611.6143 C-7745.6035 8611.4668 l-7745.6035 8611.2988 -7745.6455 8611.2129 -7745.8564 8611.2129 c-7745.9199 8611.2129 -7746.1943 8611.3398 -7746.2568 8611.3398 c-7746.3198 8611.3398 -7746.3623 8610.8975 -7746.4473 8610.8975 c-7746.4678 8610.8975 -7746.8057 8611.1289 -7746.8896 8611.1289 c-7747.0166 8611.1289 -7747.1006 8611.0449 -7747.1006 8610.9395 c-7747.1006 8610.877 -7747.1006 8610.3916 -7747.2065 8610.3916 c-7747.2915 8610.3916 -7747.5225 8610.6855 -7747.5654 8610.6855 c-7747.5854 8610.6855 -7747.5854 8610.666 -7747.5854 8610.6016 C-7747.5439 8610.1807 l-7747.5439 8610.1162 -7747.5854 8610.0957 -7747.6494 8610.0957 c-7747.7119 8610.0957 -7747.9658 8610.4121 -7748.0498 8610.4121 c-7748.0918 8610.4121 -7748.1138 8610.3701 -7748.1138 8610.2861 c-7748.1138 8610.2441 -7747.9233 8609.5273 -7747.9233 8609.3789 c-7747.9233 8609.2949 -7747.9658 8609.252 -7748.0078 8609.252 c-7748.0918 8609.252 -7748.4297 8609.6113 -7748.4722 8609.6113 c-7748.4927 8609.6113 -7748.4927 8609.6113 -7748.4927 8609.5898 c-7748.4927 8609.5059 -7748.3882 8609.1465 -7748.3882 8609.127 c-7748.3882 8609.1055 -7748.4082 8609.084 -7748.4297 8609.084 c-7748.4722 8609.084 -7748.6826 8609.2949 -7748.7446 8609.2949 c-7748.7666 8609.2949 -7748.7666 8609.2949 -7748.7666 8609.252 c-7748.7666 8609.084 -7748.5137 8608.3457 -7748.5137 8608.2822 c-7748.5137 8608.2607 -7748.5352 8608.2402 -7748.5562 8608.2402 c-7748.6826 8608.2402 -7749.1055 8608.8105 -7749.1465 8608.8105 c-7749.1675 8608.8105 -7749.1675 8608.7891 -7749.1675 8608.7256 c-7749.1675 8608.5352 -7748.8936 8607.6289 y-7748.8936 8607.6074 -7748.9146 8607.5869 -7748.9351 8607.5869 c-7749.0615 8607.5869 -7749.4414 8608.1338 -7749.5049 8608.1338 c-7749.5264 8608.1338 -7749.5264 8608.1338 -7749.5264 8608.0928 c-7749.2729 8607.1855 -7749.2729 8607.1016 v-7749.2729 8606.9961 -7749.3154 8606.9541 -7749.3994 8606.9541 c-7749.4634 8606.9541 -7749.6943 8607.291 -7749.7783 8607.291 c-7749.8218 8607.291 -7749.8418 8607.25 -7749.8418 8607.1855 c-7749.7783 8606.6377 Lf1 D-7754.0386 8605.9004 m-7754.1016 8605.9414 -7754.1865 8605.9629 -7754.2495 8605.9629 c-7754.5874 8605.9629 -7754.6714 8603.96 -7754.6714 8603.7695 c-7754.6714 8603.707 -7754.6289 8603.666 -7754.5654 8603.666 c-7753.4272 8603.666 -7751.5498 8605.627 -7751.5498 8606.0469 c-7751.5498 8606.0898 -7751.5498 8606.1104 -7751.5928 8606.1104 c-7751.6138 8606.1104 -7751.6553 8606.0898 -7751.6982 8606.0684 c-7752.0986 8605.7949 -7752.5215 8605.6895 -7753.1104 8605.6895 c-7753.4902 8605.6895 -7753.7007 8605.752 -7754.0386 8605.9004 cf-7752.3306 8609.8633 m-7751.8882 8610.6855 -7750.8115 8610.6855 -7750.7271 8610.6855 c-7750.5801 8610.6855 -7750.3906 8610.666 -7750.3906 8610.4961 c-7750.3906 8610.3066 -7751.4238 8610.0537 -7751.4238 8609.8633 c-7751.2129 8609.5273 -7751.2129 8609.4424 v-7751.2129 8609.043 -7751.2129 8609 -7751.0225 8609 c-7750.7915 8609 -7749.9897 8609.2949 -7749.7378 8610.0117 c-7749.5474 8610.5391 -7748.5767 8612.2666 -7746.4258 8612.2666 c-7745.5615 8612.2666 -7745.2446 8612.1201 -7745.0977 8612.1201 c-7744.7817 8612.1201 -7742.8418 8614.166 -7742.8198 8614.334 c-7742.7998 8614.4395 -7742.7998 8614.5664 -7742.7998 8614.6719 c-7742.7998 8614.8828 -7742.7998 8615.2832 -7743.1782 8615.5361 c-7743.3896 8615.6631 -7743.4951 8615.916 -7743.4951 8616.168 c-7743.4951 8616.2744 -7743.4951 8616.6328 -7743.2207 8616.6328 c-7742.9473 8616.6328 -7742.9058 8616.4854 -7742.9058 8616.1904 c-7742.9058 8616.002 -7742.7358 8615.8945 -7742.5889 8615.8945 c-7742.4399 8615.8945 -7741.8506 8616.1904 -7741.8506 8616.6113 c-7741.8506 8616.8438 -7742.1455 8617.9189 -7743.4321 8617.9189 c-7744.4014 8617.9189 -7744.4014 8617.793 -7744.4014 8616.3994 c-7744.4014 8615.1357 -7744.3594 8614.7344 -7744.2119 8613.5967 c-7744.1904 8613.5967 -7744.1904 8613.5752 y-7744.1904 8613.4277 -7744.3174 8613.3643 -7744.4233 8613.3643 c-7744.4438 8613.3643 -7744.4648 8613.3848 -7744.4863 8613.3848 c-7744.6118 8613.4063 -7744.9072 8613.7227 -7745.8145 8613.7002 c-7747.7119 8613.7002 -7751.9087 8612.1416 -7753.2793 8609.6533 c-7753.8906 8608.5781 -7754.2705 8607.207 -7754.2705 8606.9541 c-7754.2705 8606.4053 -7753.2578 8606.2373 -7753.0049 8606.2373 c-7751.6553 8606.2373 -7750.2847 8607.9023 -7750.2847 8608.3457 c-7750.2847 8608.3877 -7750.3271 8608.4297 -7750.3486 8608.4297 c-7750.3906 8608.4297 -7750.4326 8608.4092 -7750.4961 8608.3672 c-7750.6431 8608.2197 -7751.2334 8607.5654 -7751.8662 8607.5654 c-7752.5625 8607.5654 -7752.5835 8608.0293 -7752.5835 8608.4512 c-7752.5835 8608.8945 -7752.5415 8609.4629 -7752.3306 8609.8633 cf0 D-7748.5352 8606.5527 m-7748.5352 8606.7002 -7748.5352 8607.0176 -7748.2192 8607.0176 c-7748.1553 8607.0176 -7748.0918 8606.9961 -7748.0278 8606.9121 c-7747.9863 8606.8262 -7747.8608 8606.3848 -7747.7754 8606.3848 c-7747.7334 8606.3848 -7747.7119 8606.4053 -7747.7119 8606.4688 c-7747.7119 8606.7002 -7747.8174 8607.0801 -7747.8174 8607.3135 c-7747.8174 8607.46 -7747.6694 8607.6289 -7747.5225 8607.6289 c-7747.3115 8607.6289 -7747.1855 8607.207 -7747.1226 8606.9961 c-7747.1006 8606.9326 -7747.0586 8606.9121 -7747.0386 8606.9121 c-7747.0166 8606.9326 -7747.0166 8606.9541 V-7747.0386 8607.4814 l-7747.0386 8607.7129 -7747.0386 8607.9023 -7746.8271 8607.9023 c-7746.6782 8607.9023 -7746.4897 8607.1016 -7746.3418 8607.1016 c-7746.3198 8607.1016 -7746.2998 8607.123 -7746.2998 8607.1855 c-7746.2998 8607.25 -7746.3623 8607.5869 -7746.3623 8607.6709 c-7746.3623 8607.8613 -7746.3418 8608.2822 -7746.1104 8608.2822 c-7746.0254 8608.2822 -7745.8774 8607.7969 -7745.7935 8607.7969 c-7745.7729 8607.7969 -7745.7729 8607.8184 -7745.7729 8607.8613 c-7745.7729 8607.9453 -7745.8994 8608.3037 -7745.8994 8608.3877 c-7745.8994 8608.4922 -7745.7935 8608.5996 -7745.7095 8608.5996 c-7745.5835 8608.5996 -7745.3506 8607.9863 -7745.3086 8607.9863 c-7745.2666 8607.9863 -7745.2446 8608.0508 -7745.2446 8608.1143 c-7745.2446 8608.2197 -7745.3926 8608.6406 -7745.3926 8608.7256 c-7745.3926 8608.873 -7745.3286 8608.957 -7745.2666 8608.957 c-7745.1826 8608.957 -7745.0342 8608.5566 -7744.9502 8608.5566 c-7744.9072 8608.5566 -7744.8862 8608.6621 -7744.8862 8608.7256 c-7745.0762 8609.4424 -7745.0762 8609.5898 v-7745.0762 8609.7168 -7745.0342 8609.7578 -7744.9922 8609.7578 c-7744.9072 8609.7578 -7744.7178 8609.2949 -7744.6338 8609.2949 c-7744.5918 8609.2949 -7744.5703 8609.3584 -7744.5703 8609.4424 c-7744.5703 8609.5898 -7744.7817 8610.1602 -7744.7817 8610.2637 c-7744.7817 8610.4121 -7744.7817 8610.6016 -7744.6758 8610.6016 c-7744.6338 8610.6016 -7744.4863 8610.3916 -7744.4438 8610.3916 c-7744.4014 8610.3916 -7744.3809 8610.4336 -7744.3809 8610.4961 c-7744.3809 8610.5596 -7744.5073 8610.8555 -7744.5073 8610.918 c-7744.5073 8611.0449 -7741.9561 8613.7637 -7741.4287 8613.7637 c-7740.9233 8613.7637 -7740.8594 8613.7637 -7740.7744 8613.9551 c-7740.6904 8614.1865 -7740.5854 8614.4189 -7740.1426 8614.6924 c-7739.0039 8615.3242 -7738.8774 8615.4102 -7738.8135 8615.7266 c-7738.7295 8616.2109 -7738.7085 8616.2529 -7738.3926 8616.4639 c-7738.2446 8616.5693 -7738.2026 8616.6748 -7738.2026 8616.8223 c-7738.2026 8617.1807 -7738.2026 8617.2236 -7738.0127 8617.2236 c-7737.7598 8617.2236 -7737.4214 8616.5488 -7737.4214 8616.1904 c-7737.4214 8615.2412 -7737.8018 8615.1357 -7738.4126 8614.9658 c-7738.5615 8614.9248 -7738.7085 8614.8184 -7738.7085 8614.7344 c-7738.7085 8614.6924 -7738.6875 8614.6719 -7738.6455 8614.6504 c-7737.7598 8614.1455 -7737.4214 8613.4492 -7737.4214 8612.8789 c-7737.4214 8612.0781 -7738.7085 8608.3672 -7738.7085 8608.0293 c-7738.7085 8607.5439 -7738.5615 8607.502 -7738.3711 8607.502 c-7738.2241 8607.502 -7737.7178 8608.0293 -7737.5903 8608.0293 c-7737.5073 8608.0293 -7737.4214 8607.9658 -7737.4214 8607.7969 c-7737.4214 8607.5654 -7737.8657 8606.5322 -7738.8984 8606.5322 c-7739.4878 8606.5322 -7739.8682 8607.0586 -7739.8682 8607.5215 c-7739.8682 8608.4727 -7739.5518 8608.6465 -7739.1934 8609.2168 c-7739.1294 8609.3438 -7739.0879 8609.4697 -7739.0879 8609.5762 c-7739.0879 8609.8496 -7739.7202 8609.7705 -7740.0786 8609.7705 c-7740.2256 8609.7705 -7740.3955 8609.7441 -7740.3955 8609.6377 c-7740.3955 8605.0215 -7743.6426 8601.4717 -7747.5225 8600.7334 c-7747.8394 8600.6689 -7747.9863 8600.5439 -7747.9863 8600.418 c-7747.9863 8600.375 -7747.1006 8599.2578 -7745.6255 8599.2578 c-7743.8535 8599.2578 -7742.7153 8600.7334 -7742.7153 8601.4922 c-7742.7153 8601.5762 -7742.7568 8601.6406 -7742.8198 8601.6406 c-7742.9058 8601.6406 -7743.8535 8600.6914 -7744.0854 8600.6914 c-7744.2119 8600.6914 -7744.3174 8600.7969 -7744.3174 8600.9023 c-7744.3174 8601.0293 -7744.2334 8601.1543 -7744.0439 8601.3018 c-7743.9814 8601.3242 -7742.5454 8603.0117 -7742.2515 8603.3486 c-7741.6401 8604.0654 -7740.8594 8604.8447 -7739.6362 8604.8447 c-7738.4561 8604.8447 -7737.4214 8603.6445 -7737.4214 8602.8848 c-7737.4214 8602.1055 -7737.8857 8601.4082 -7738.3711 8601.0078 c-7739.8896 8599.7422 -7739.8896 8599.3633 -7739.8896 8599.1309 c-7739.8896 8598.8145 -7739.6992 8598.6895 -7739.4878 8598.6895 c-7739.1514 8598.6895 -7738.9824 8598.8359 -7738.9824 8599.5098 c-7738.9824 8599.8477 -7738.6455 8600.1855 -7738.2026 8600.1855 c-7737.7598 8600.1855 -7737.4434 8599.8066 -7737.4434 8599.1943 c-7737.4434 8598.584 -7738.2871 8597.8447 -7739.4878 8597.8447 c-7741.1338 8597.8447 -7741.6182 8599.0039 -7741.6182 8599.4893 c-7741.6182 8599.8262 -7741.5127 8600.418 -7741.1958 8600.7754 c-7740.8594 8601.1768 -7740.4595 8601.873 -7740.1846 8602.5898 c-7739.9521 8603.2432 -7739.4258 8603.6016 -7739.0879 8603.6016 c-7739.0239 8603.6016 -7739.0039 8603.5801 -7739.0039 8603.5381 c-7739.0039 8603.4326 -7739.2144 8603.0527 -7739.2144 8602.9688 c-7739.2144 8602.5898 -7739.1094 8602.3789 -7738.8984 8602.3789 c-7738.3711 8602.3789 -7738.2656 8603.0313 -7738.2656 8603.2637 c-7738.2656 8603.75 -7738.6245 8604.3389 -7739.6782 8604.3389 c-7741.0063 8604.3389 -7742.1245 8602.5898 -7742.1245 8602.5264 c-7742.1245 8602.5039 -7742.0825 8601.957 -7742.0825 8601.8506 c-7742.0825 8599.9521 -7743.79 8598.6895 -7745.6255 8598.6895 c-7747.1855 8598.6895 -7748.3447 8599.9121 -7748.5352 8600.2061 c-7748.6401 8600.375 -7748.7666 8600.459 -7748.9146 8600.459 c-7749.2729 8600.459 -7752.1191 8600.3975 -7752.1191 8599.9746 c-7752.1191 8599.9326 -7751.9937 8599.4688 -7751.8242 8599.4688 c-7751.7607 8599.4688 -7751.6982 8599.5098 -7751.6353 8599.5742 c-7751.4438 8599.8066 -7751.0225 8599.9326 -7750.6431 8599.9326 c-7750.0942 8599.9326 -7749.1895 8599.3418 -7749.1895 8598.6045 c-7749.1895 8598.3086 -7749.5679 8597.8242 -7749.8838 8597.8242 c-7750.1377 8597.8242 -7751.1914 8598.541 -7751.4238 8598.541 c-7751.7402 8598.541 -7751.8662 8598.3926 -7752.1606 8598.0557 c-7752.3306 8597.8662 -7752.4575 8597.8447 -7752.6465 8597.8447 c-7752.8154 8597.8447 -7752.9634 8597.9502 -7752.9634 8598.0977 c-7752.9634 8598.2656 -7752.6465 8598.584 -7752.6265 8598.8574 c-7752.6265 8599.0039 -7752.6055 8599.2354 -7752.6055 8599.4258 c-7752.6055 8599.6797 -7752.6265 8600.0381 -7752.8994 8600.0381 c-7753.7217 8600.0381 -7755.7681 8598.752 -7756.6538 8598.1602 c-7757.1592 8597.8242 -7757.2432 8597.8242 -7757.3066 8597.8242 c-7757.4336 8597.8242 -7757.5176 8597.9082 -7757.5176 8598.0557 c-7757.5176 8598.1816 -7755.0713 8600.334 -7752.8994 8601.0703 c-7752.5835 8601.1768 -7752.6055 8601.3242 -7752.5625 8601.4922 c-7752.1406 8603.2432 -7750.5166 8605.416 -7749.9263 8605.416 c-7749.7783 8605.416 -7749.7158 8605.416 -7749.7158 8605.5215 c-7749.7158 8605.7305 -7749.6104 8605.9629 -7749.4634 8605.9629 c-7749.4209 8605.9629 -7749.2524 8605.7305 -7749.21 8605.7305 c-7749.1255 8605.7305 -7749.0615 8606.1953 -7749.0415 8606.2783 c-7748.9995 8606.3848 -7748.9146 8606.4688 -7748.8506 8606.4688 c-7748.7666 8606.4688 -7748.5986 8606.1318 -7748.5352 8606.1318 c-7748.5137 8606.1318 -7748.4927 8606.1514 -7748.4927 8606.1953 c-7748.5352 8606.5527 Lf1 D-7749.9058 8602.041 m-7750.0942 8602.4629 -7750.2002 8602.7158 -7750.2002 8603.0957 c-7750.2002 8603.3486 -7749.7783 8604.5928 y-7749.7783 8604.6563 -7749.7998 8604.6768 -7749.8633 8604.6768 c-7750.2847 8604.6768 -7752.0352 8602.4414 -7752.0352 8601.5762 c-7752.0352 8601.4717 -7751.9722 8601.4082 -7751.8662 8601.4082 c-7751.8042 8601.4082 -7749.8633 8601.5977 -7749.8633 8601.8301 c-7749.8633 8601.8936 -7749.8838 8601.957 -7749.9058 8602.041 cf-7741.8081 8613.0059 m-7742.7568 8612.1201 -7743.6846 8611.2559 -7743.6846 8610.707 c-7743.6846 8610.3701 -7743.6226 8609.9688 -7743.6226 8609.5479 c-7743.6226 8608.0928 -7744.9722 8606.7637 -7745.8774 8606.3008 c-7746.3623 8606.0469 -7746.8481 8605.4785 -7746.8481 8605.1191 c-7746.8481 8605.0137 -7746.8057 8604.9512 -7746.7422 8604.9512 c-7746.6582 8604.9512 -7746.5942 8604.9717 -7746.5103 8604.9717 c-7746.4473 8604.9717 -7746.2158 8604.8447 -7746.1519 8604.8447 c-7746.0049 8604.8447 -7745.6035 8605.5 -7745.4561 8605.5 c-7745.2446 8605.5 -7745.1826 8605.2891 -7745.1826 8605.1406 c-7745.1826 8604.7822 -7745.7305 8603.4326 -7746.9951 8603.4326 c-7747.7554 8603.4326 -7748.0498 8603.875 -7748.0498 8604.2129 c-7748.0498 8604.8447 -7747.5225 8605.457 -7747.3975 8605.627 c-7747.3545 8605.668 -7747.3335 8605.71 -7747.3335 8605.752 c-7747.3335 8605.7949 -7747.3545 8605.8145 -7747.4175 8605.8145 c-7747.6694 8605.8145 -7749.6519 8604.7822 -7749.6519 8603.0527 c-7749.6519 8602.6318 -7749.4209 8601.8301 -7748.7666 8601.8301 c-7746.2998 8601.8301 -7742.1675 8605.6895 -7742.1675 8610.1377 c-7742.1675 8610.5176 -7742.3984 8611.0664 -7742.4614 8611.4453 c-7742.4834 8611.4668 -7742.4834 8611.5088 -7742.4834 8611.5498 c-7742.4834 8611.6768 -7742.4399 8611.8457 -7742.3145 8611.8457 c-7742.0615 8611.8457 -7740.3955 8611.6563 -7740.0366 8611.6563 c-7738.3926 8611.6563 -7737.9702 8611.6563 -7737.9702 8612.752 c-7737.9702 8613.9756 -7739.1094 8614.293 -7739.5098 8614.293 c-7739.8896 8614.293 -7740.2695 8613.9961 -7740.2695 8613.6377 c-7740.2695 8613.5322 -7740.0791 8613.0898 -7740.0791 8613.0059 c-7740.0791 8612.8584 -7740.2065 8612.7744 -7740.3325 8612.7744 c-7740.4795 8612.7744 -7740.9858 8613.2793 -7741.1338 8613.2793 c-7741.3862 8613.2793 -7741.6401 8613.1533 -7741.8081 8613.0059 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 7)0 Au1 Ap0 D0 J 0 j 1 w 4 M []0 d0 XR-7741 8623 m-7759 8623 L-7759 8605 L-7741 8605 L-7741 8623 Lnu0 Ap0 O0 0 0 1 k-7741 8614 m-7748.8379 8609.4746 L-7748.8379 8612.5625 L-7759 8612.5625 L-7759 8615.4375 L-7748.8379 8615.4375 L-7748.8379 8618.5264 L-7741 8614 Lf0.15 1 0.9 0.1 k-7745.2939 8612.3857 m-7748.0879 8610.7744 L-7748.0879 8613.3008 L-7759 8613.3008 L-7759 8614.7002 L-7748.0879 8614.7002 L-7748.0879 8617.2266 L-7745.2939 8615.6133 L-7742.5 8614 L-7745.2939 8612.3857 Lf0 1 1 0 k-7747.1675 8613.0918 m-7747.5586 8613.0918 -7747.8896 8613.3408 -7748.0176 8613.6865 C-7759 8613.6865 L-7759 8614.3125 L-7748.0176 8614.3125 L-7747.8896 8614.6602 -7747.5586 8614.9082 -7747.1675 8614.9082 c-7746.6655 8614.9082 -7746.2588 8614.502 -7746.2588 8614 c-7746.2588 8613.499 -7746.6655 8613.0918 -7747.1675 8613.0918 cfUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -(/ Adobe PatternOnPath Brush Tool/ Gothic/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Spoke)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Gothic)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Red Arrow Brush)(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)Pc0 1 1 0 k(CMYK Red)Pc0 0 1 0 k(CMYK Yellow)Pc1 0 1 0 k(CMYK Green)Pc1 0 0 0 k(CMYK Cyan)Pc1 1 0 0 k(CMYK Blue)Pc0 1 0 0 k(CMYK Magenta)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0.9 0.85 0 k(C=0 M=90 Y=85 K=0)Pc0 0.8 0.95 0 k(C=0 M=80 Y=95 K=0)Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0)Pc0 0.35 0.85 0 k(C=0 M=35 Y=85 K=0)Pc0.05 0 0.9 0 k(C=5 M=0 Y=90 K=0)Pc0.2 0 1 0 k(C=20 M=0 Y=100 K=0)Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0)Pc0.75 0 1 0 k(C=75 M=0 Y=100 K=0)Pc0.85 0.1 1 0.1 k(C=85 M=10 Y=100 K=10)Pc0.9 0.3 0.95 0.3 k(C=90 M=30 Y=95 K=30)Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0)Pc0.8 0.1 0.45 0 k(C=80 M=10 Y=45 K=0)Pc0.7 0.15 0 0 k(C=70 M=15 Y=0 K=0)Pc0.85 0.5 0 0 k(C=85 M=50 Y=0 K=0)Pc1 0.95 0.05 0 k(C=100 M=95 Y=5 K=0)Pc1 1 0.25 0.25 k(C=100 M=100 Y=25 K=25)Pc0.75 1 0 0 k(C=75 M=100 Y=0 K=0)Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0)Pc0.35 1 0.35 0.1 k(C=35 M=100 Y=35 K=10)Pc0.1 1 0.5 0 k(C=10 M=100 Y=50 K=0)Pc0 0.95 0.2 0 k(C=0 M=95 Y=20 K=0)Pc0.25 0.25 0.4 0 k(C=25 M=25 Y=40 K=0)Pc0.4 0.45 0.5 0.05 k(C=40 M=45 Y=50 K=5)Pc0.5 0.5 0.6 0.25 k(C=50 M=50 Y=60 K=25)Pc0.55 0.6 0.65 0.4 k(C=55 M=60 Y=65 K=40)Pc0.25 0.4 0.65 0 k(C=25 M=40 Y=65 K=0)Pc0.3 0.5 0.75 0.1 k(C=30 M=50 Y=75 K=10)Pc0.35 0.6 0.8 0.25 k(C=35 M=60 Y=80 K=25)Pc0.4 0.65 0.9 0.35 k(C=40 M=65 Y=90 K=35)Pc0.4 0.7 1 0.5 k(C=40 M=70 Y=100 K=50)Pc0.5 0.7 0.8 0.7 k(C=50 M=70 Y=80 K=70)PcBb2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient)PcBb0 0 0 0 Bh2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Soft Black Vignette)PcBb2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Desert Sunset)PcBb0 0 0 0 Bh2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Copper Radial)Pc(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Fish Pattern)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 0 0 0.899994 k(C=0 M=0 Y=0 K=90)Pc0 0 0 0.799988 k(C=0 M=0 Y=0 K=80)Pc0 0 0 0.699997 k(C=0 M=0 Y=0 K=70)Pc0 0 0 0.599991 k(C=0 M=0 Y=0 K=60)Pc0 0 0 0.5 k(C=0 M=0 Y=0 K=50)Pc0 0 0 0.399994 k(C=0 M=0 Y=0 K=40)Pc0 0 0 0.299988 k(C=0 M=0 Y=0 K=30)Pc0 0 0 0.199997 k(C=0 M=0 Y=0 K=20)Pc0 0 0 0.099991 k(C=0 M=0 Y=0 K=10)Pc0 0 0 0.049988 k(C=0 M=0 Y=0 K=5)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)Pc0 0.75 1 0 k(C=0 M=75 Y=100 K=0)Pc0 0.1 0.95 0 k(C=0 M=10 Y=95 K=0)Pc0.85 0.1 1 0 k(C=85 M=10 Y=100 K=0)Pc1 0.9 0 0 k(C=100 M=90 Y=0 K=0)Pc0.6 0.9 0.000031 0.000031 k(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 O0.15 0.15 0.24 0 k0 J 0 j 1 w 4 M []0 d0 XR843.6543 321.1475 m851.0605 337.0801 850.2061 354.9922 841.0957 374.458 c830.9033 396.2363 815.5752 408.5361 795.5352 411.0166 c792.9844 411.3311 790.2988 411.4912 787.5537 411.4912 c775.5811 411.4912 763.4658 408.5576 751.6318 405.3115 C751.8428 406.5283 752.0361 407.7598 752.2139 409.0107 c754.4688 424.9072 752.46 442.7637 746.7021 458.0029 c739.5908 476.8193 727.6094 490.292 712.0537 496.9653 c702.4922 501.0674 693.1465 503.1475 684.2754 503.1475 c669.6309 503.1475 656.6074 497.4648 646.6133 486.7144 C646.1045 486.167 L645.167 484.8853 L638.6924 475.1929 641.0771 461.4443 645.5029 439.8145 c647.3779 430.6494 649.5039 420.2617 649.1289 415.6748 c648.1533 403.7402 642.0879 391.5947 635.666 378.7363 c629.6455 366.6807 623.4189 354.2158 620.5225 340.3301 c617.0791 323.8252 617.3701 299.3496 627.7334 277.9082 C624.5596 275.3428 621.4629 272.9531 618.2344 270.4609 C618.1514 270.3975 L615.458 268.3174 612.7012 266.1885 609.7754 263.8623 C601.583 269.6758 594.5156 275.4424 587.6387 281.0869 C587.8965 281.7461 588.1436 282.4014 588.3779 283.0488 C591.1934 290.8115 L585.917 297.2852 L581.8545 302.2842 567.8301 319.1865 557.9404 326.793 C553.7383 330.0234 L549.8955 329.8584 L543.0273 336.0127 536.3232 342.5947 529.8125 348.9873 c514.1797 364.333 498.0859 380.1309 477.9199 392.1641 C499.9463 408.5127 504.5205 424.1016 503.666 435.5078 C508.8848 441.7134 511.8018 445.8687 515.9648 452.896 C520.3379 453.3037 524.7393 453.9253 529.3232 454.7808 c551.7217 458.3682 554.1514 489.4448 555.3203 504.3921 c556.2432 516.2129 554.7402 533.2378 551.3916 549.0454 C551.9717 556.4731 551.4453 562.8667 550.9365 569.0571 c550.8633 569.9517 550.8115 570.8281 550.7607 571.6938 c550.6787 573.0845 550.5938 574.5225 550.4277 576.0142 c546.6543 609.9028 524.5361 641.7876 484.6836 670.7871 C482.3154 672.7178 479.9512 674.625 477.6055 676.5112 C478.0732 683.3281 476.5156 690.022 473.3779 694.0083 c471.4834 696.4155 468.9795 697.814 466.3271 697.9468 C465.7988 697.9736 L464.9434 704.355 462.9482 710.5776 459.4482 715.4448 c455.4688 720.979 449.9102 724.314 443.373 725.0889 C442.8076 725.1563 L442.2393 725.124 L441.9121 725.1055 441.5898 725.0654 441.2725 725.0059 C438.7656 729.3457 435.9453 733.2979 432.793 736.9019 C432.6533 737.0615 L423.29 747.7808 416.9067 752.3545 411.3096 752.3545 c409.3076 752.3545 407.4233 751.7524 405.8599 750.6128 c404.4609 749.5928 403.5186 748.3599 402.9399 746.9727 C388.0415 760.8188 370.4775 772.5952 350.4624 782.1367 c309.7339 801.5537 271.1929 805.8115 251.8433 806.6211 c246.5615 806.8418 241.7275 806.9536 237.4751 806.9536 c217.3076 806.9536 206.8545 804.5693 201.3945 798.7227 c198.9272 796.0796 197.5254 792.7148 197.4175 789.2012 C197.2129 787.3027 197.3472 784.6553 198.7725 781.8242 C194.1069 782.1729 189.3003 782.3809 184.4668 782.3809 c166.8481 782.3809 153.1528 779.5732 143.7607 774.0356 c134.4072 768.52 133.5918 761.165 133.9063 757.3672 C122.269 753.9268 114.6187 749.6152 109.6338 746.4717 c89.4106 733.7158 78.8848 711.8291 86.1699 697.6836 c87.9336 694.2578 93.436 686.2905 106.4072 686.292 c111.8232 686.292 118.0879 687.7319 125.0264 690.5713 c135.2725 694.7627 142.8838 696.7842 150.2256 697.2441 C156.0981 695.623 157.2168 694.2197 158.6948 689.7661 C167.7368 649.8091 151.5977 629.9814 124.9009 597.1895 c123.3442 595.2773 121.7578 593.3281 120.144 591.3359 C118.3442 589.1123 L103.5703 570.856 97.6182 549.8647 100.6533 526.7222 c106.9727 478.5288 153.1245 439.7329 170.4976 426.7021 C149.8608 411.9482 132.3667 384.2646 119.5234 345.8271 c118.251 342.0186 117.1279 338.2656 116.042 334.6357 c114.9629 331.0303 114.0181 327.9063 113.0156 324.8877 C91.8857 313.2822 85.083 292.9043 80.4404 273.3701 C62.9414 282.1768 51.4678 283.6152 45.8506 283.6152 c44.2798 283.6152 43.2705 283.499 42.8232 283.4316 C36.8711 282.5508 L34.9551 276.8486 L34.3892 275.167 30.5747 261.9082 42.9868 241.875 C38.2378 241.4463 35.3403 240.2891 34.4531 239.8857 C29.3672 237.5898 L28.7393 232.0479 L28.4468 229.4834 26.8857 208.4854 49.499 180.7666 C47.3838 180.5596 46.0381 180.3467 45.7681 180.3027 C35.7935 178.6729 L37.7104 168.75 L37.9639 167.4365 44.3452 136.418 81.2495 120.8975 c93.9258 115.5674 105.3032 111.999 115.9585 110.0146 C141.4785 87.6807 177.1323 76.3584 221.9697 76.3584 c244.2983 76.3584 269.2939 79.1855 296.2617 84.7627 c320.7373 89.8242 344.6333 97.707 367.7441 105.3311 c395.1665 114.377 423.5229 123.7305 451.7568 127.8145 c458.6416 128.8096 465.9863 129.6895 473.0166 130.3613 C768.8574 130.3613 L768.8574 159.4814 L741.1758 159.4814 L744.8662 163.0889 748.1299 166.6221 751.0068 170.1201 C752.3789 170.0664 753.7734 170.0391 755.1816 170.0391 c765.6035 170.04 774.8535 171.457 780.9746 172.3945 c801.4033 175.5234 815.7715 183.2803 824.8994 196.1074 c832.8916 207.334 836.7852 222.1143 837.0752 242.457 C846.8867 251.6826 853.0352 262.1055 855.3643 273.4727 c858.5137 288.8545 854.5742 304.877 843.6543 321.1475 Cfu*u1 D0.5 0.7 0.8 0.7 k836.0928 320.6191 m844.3916 335.5322 844.0957 352.7129 835.208 371.7031 c825.8975 391.5986 812.6602 402.3477 794.7383 404.5654 c792.4531 404.8477 790.0352 404.9912 787.5537 404.9912 c774.6045 404.9912 761.0049 401.1914 747.8555 397.5166 c746.3096 397.085 744.6436 396.6211 742.9219 396.1494 C743.9775 399.9473 744.999 404.4355 745.7783 409.9238 c747.8848 424.7705 746.0059 441.4565 740.6221 455.7051 c734.1504 472.8291 723.3857 485.0313 709.4912 490.9917 c700.7451 494.7441 692.2617 496.6475 684.2754 496.6475 c671.4834 496.6475 660.1055 491.6812 651.374 482.2886 C651.1152 482.0103 L650.5723 481.2749 L645.5313 473.7285 647.7813 461.103 651.8711 441.1177 c653.9297 431.0566 656.0576 420.6523 655.6074 415.1445 c654.5293 401.9609 648.1934 389.2725 641.4814 375.832 c635.6445 364.1455 629.6094 352.0596 626.8857 339.002 c623.3672 322.1387 624.0166 297.1309 635.9443 276.2549 C635.4365 275.8291 L630.8994 272.0254 626.6777 268.7666 622.207 265.3164 c618.3721 262.3555 614.4229 259.3076 610.0625 255.749 C599.5605 262.8887 591.0186 269.9023 582.7422 276.6963 c581.7451 277.5146 580.7529 278.3291 579.7607 279.1406 C580.7041 281.2188 581.5439 283.2695 582.2676 285.2646 C583.8262 289.5625 L580.873 293.1855 L578.0605 296.6465 563.5439 314.2832 553.9795 321.6396 C551.6533 323.4277 L547.5469 323.251 L539.875 330 532.4629 337.2764 525.2695 344.3389 c507.583 361.7002 489.3438 379.6064 465.4805 391.582 C488.7002 406.0088 499.5107 421.8594 496.877 437.5586 C503.2236 444.9443 506.0586 448.9033 510.5586 456.5244 c511.0762 457.4009 511.584 458.2603 512.0869 459.104 C517.3721 459.4634 522.6689 460.1479 528.2197 461.187 c543.5654 463.5806 547.2549 484.623 548.8398 504.8979 c549.7383 516.4023 548.2041 533.1128 544.834 548.627 C545.4941 555.9263 544.9678 562.3286 544.458 568.5254 c544.2666 570.8574 544.2148 573.0703 543.9678 575.2949 c540.0293 610.668 515.0254 640.7026 480.7148 665.6362 C477.6104 668.1689 474.5117 670.6597 471.4521 673.1167 c471.2021 673.3174 470.9551 673.5161 470.7061 673.7168 C472.4531 682.9512 469.1895 691.2954 466.002 691.4551 C463.0732 690.7441 462.4443 683.0854 459.2207 679.916 C459.0811 680.002 458.9395 680.0869 458.7988 680.1729 C461.7539 694.3198 458.7822 716.7163 442.6074 718.6343 C439.5225 718.4595 445.8311 706.2314 444.3564 700.6226 C440.9824 712.4077 436.0352 723.3237 427.9004 732.6221 c425.7554 735.0742 414.1074 748.5811 409.6899 745.3613 c405.7451 742.4844 414.5869 727.4136 415.7983 724.4404 c416.0117 723.916 416.2148 723.3965 416.4194 722.8755 C398.9531 744.896 375.9292 762.7959 347.6655 776.2695 c307.979 795.1895 270.4253 799.3379 251.5723 800.127 c224.6094 801.2529 211.0215 799.5078 206.146 794.2871 c204.6836 792.7207 203.9067 790.7808 203.9106 788.7476 C203.417 785.3511 205.4321 782.2949 209.915 779.6533 c212.7983 777.9536 216.731 776.314 220.894 774.5781 c223.46 773.5078 226.3237 772.313 229.1177 771.0093 C201.2729 776.6274 165.3848 779.2393 147.0625 768.4365 c140.4082 764.5127 140.0664 759.7759 140.4556 757.3013 c140.7021 755.7324 141.3589 754.25 142.3721 752.8701 C128.0625 749.5708 119.2207 744.833 113.1016 740.9736 c95.9521 730.1567 86.2656 711.6943 91.9492 700.6587 c93.4619 697.7202 97.3525 692.791 106.4072 692.792 c110.9746 692.792 116.4111 694.0688 122.5654 696.5874 c133.9312 701.2368 142.4839 703.4175 150.9077 703.7896 C159.4854 701.5674 162.5659 698.8545 164.9648 691.5068 C175.4312 645.7661 154.708 623.6909 125.1963 587.2461 C123.397 585.0234 L109.7876 568.2061 104.3037 548.875 107.0981 527.5674 c112.3062 487.8481 147.7632 451.2861 176.5469 430.3125 c178.4014 428.9619 180.3218 427.6338 182.2915 426.3379 C160.5322 415.0889 140.2549 387.3613 125.6885 343.7676 c124.4546 340.0742 123.3433 336.3623 122.269 332.7725 c120.8843 328.1455 119.6924 324.2207 118.3276 320.3252 C95.0054 308.8525 89.8989 286.0391 84.959 263.9648 C84.8779 263.6016 L58.394 278.7549 44.6846 277.1387 43.7754 277.002 C41.7637 276.7041 L41.1157 274.7754 L40.8687 274.041 36.0156 258.4824 56.5752 234.3506 C53.1602 235.1406 49.853 235.5371 46.6733 235.5371 c40.7813 235.5371 37.4839 234.123 37.1274 233.9609 C35.4097 233.1855 L35.1973 231.3125 L35.0776 230.2617 32.7114 205.8086 63.9253 174.5078 C62.1475 174.6348 60.3115 174.6982 58.4204 174.6982 c51.8521 174.6982 47.0186 173.9209 46.8159 173.8877 C43.4443 173.3369 L44.0923 169.9824 L44.3188 168.8096 50.0322 141.0781 83.769 126.8896 c96.71 121.4482 108.2168 117.9111 118.9072 116.0908 C143.2866 94.0381 177.9541 82.8584 221.9697 82.8584 c243.8569 82.8584 268.4097 85.6406 294.9453 91.1279 c319.0562 96.1143 342.7686 103.9365 365.708 111.5039 c393.3975 120.6377 422.0288 130.082 450.8262 134.2471 c457.9219 135.2734 465.4854 136.1768 472.708 136.8613 C762.3574 136.8613 L762.3574 152.9814 L724.1309 152.9814 L734.3252 161.3799 742.1943 169.2305 748.0176 176.8008 C750.3174 176.627 752.7188 176.5391 755.1807 176.5391 c765.1035 176.54 774.0605 177.9111 779.9902 178.8193 c798.5898 181.668 811.5479 188.5557 819.6045 199.877 c827.1367 210.458 830.6387 224.9355 830.5928 245.3516 C840.5996 254.1064 846.7881 263.9971 848.9961 274.7764 c851.9785 289.3398 847.6377 304.7529 836.0928 320.6191 Cf0 D86.5249 262.6533 m86.3574 262.752 86.1968 262.8408 86.0303 262.9375 C86.3213 262.8428 86.5479 262.748 86.5249 262.6533 Cf*U*u1 D0 0.13 1 0 k430.8916 611.6152 m428.1626 611.6475 425.5107 611.6802 422.9131 611.728 C421.8335 610.561 420.7314 609.3628 419.6074 608.1382 c408.6587 596.2207 395.5869 581.9995 382.333 574.4961 C377.0049 570.9302 360.5376 561.6973 346.4722 561.5664 C355.3267 565.5669 370.7241 572.3794 V350.2759 566.585 328.8413 565.4365 307.7827 569.1382 c285.7417 573.0127 272.645 560.457 268.0381 554.8789 c261.7764 547.2988 259.918 539.6118 261.3174 535.9375 c263.7739 529.4902 269.6763 525.4858 277.8452 519.9438 c283.6416 516.0112 290.3433 511.4565 297.3877 504.9297 C294.1934 511.1079 291.896 515.209 291.8418 515.3052 C290.1606 518.2954 L293.1392 516.5933 L305.6313 509.4546 311.979 494.6597 318.6992 478.9956 c319.2007 477.8262 319.7046 476.6519 320.2134 475.4756 c323.0615 468.8887 325.9966 462.1021 329.1567 455.4116 c339.9922 432.4717 353.4775 403.9229 379.8423 392.7422 c387.6123 389.4463 396.2197 387.7754 405.4258 387.7754 c422.105 387.7754 440.8164 393.3955 456.7607 403.1953 c476.0986 415.0791 484.2285 426.9941 480.9209 438.6094 c478.6016 446.7607 470.8506 454.7505 464.0117 461.7993 c461.4824 464.4077 459.1152 466.8486 457.0078 469.2764 c456.3818 469.9976 455.7578 470.7217 455.1328 471.4443 C454.4053 471.6094 453.6758 471.7739 452.9551 471.9478 C450.7373 467.8247 456.9424 452.23 457.4219 449.1992 C432.0137 457.8105 439.5879 438.3335 408.5273 437.1167 C412.4272 435.645 416.6699 434.4717 421.3481 433.6475 c463.9404 426.1455 460.1875 448.1997 Y468.1641 443.5073 468.8916 434.5688 467.7822 432.9048 c464.0166 427.2539 451.8379 422.4492 439.9004 422.4492 c432.4639 422.4492 425.1221 423.21 419.9629 424.3105 c413.3428 425.7246 401.396 429.043 390.4131 436.9937 C390.4102 436.9951 390.4077 436.9951 390.4048 436.9971 C390.4058 436.999 L376.1675 447.3096 366.9893 464.9272 356.3882 482.0156 C355.3936 483.6182 L354.0996 485.7026 352.7847 487.8701 351.4404 490.0864 c339.5483 509.6953 326.1182 531.8369 304.4214 535.5283 C297.0269 536.2598 291.7075 534.1646 283.8589 529.3389 C284.5137 533.3667 286.0293 537.8184 288.7915 540.8896 c300.0933 553.457 327.291 549.79 342.3936 544.1377 C339.8926 543.9424 337.4453 543.6558 335.0356 543.2988 C342.3774 540.0576 349.3169 535.7036 355.6748 531.7129 c357.2148 530.7461 358.7393 529.7891 360.2476 528.8604 c364.6055 526.1763 368.9038 523.4805 373.1709 520.8042 c400.4946 503.666 426.3037 487.478 458.2617 480.4546 c481.9912 475.2402 499.3281 472.1582 523.1523 476.6396 C523.3506 476.6724 L526.1357 477.0757 531.125 481.7778 533.2324 508.7397 c535.3467 535.8149 527.0566 573.4478 507.1182 592.9863 c488.8066 610.9331 458.0381 611.2954 430.8916 611.6152 cf0 D416.3066 566.811 m421.7705 579.9238 423.8506 585.0605 414.5132 583.9863 C416.167 587.5068 419.0703 593.0874 422.7793 594.8569 c439.1094 602.6484 433.791 578.103 416.3066 566.811 Cf*Uu0 0.27 1 0 k507.1182 592.9863 m488.8066 610.9331 458.0381 611.2954 430.8916 611.6152 c428.1626 611.6475 425.5107 611.6802 422.9131 611.728 C421.8335 610.561 420.7314 609.3628 419.6074 608.1382 c417.2173 605.5366 414.7207 602.8242 412.1489 600.0967 C426.6655 607.0313 447.0938 608.3525 448.6641 589.5034 C448.8848 587.9565 448.8418 586.4639 448.6445 585.0083 C479.1465 596.1914 516.0566 563.6377 516.9414 533.5542 c516.9414 523.2539 516.9268 512.9561 513.8271 503.0991 C463.917 488.3447 407.2148 516.3477 365.2148 537.3472 C368.8584 539.1694 372.8906 538.2729 376.814 538.1372 C354.1763 551.0298 321.6582 561.3018 299.1924 547.2876 C312.3618 551.5903 330.8857 548.4443 342.3936 544.1377 C339.8926 543.9424 337.4453 543.6558 335.0356 543.2988 C342.3774 540.0576 349.3169 535.7036 355.6748 531.7129 c357.2148 530.7461 358.7393 529.7891 360.2476 528.8604 c364.6055 526.1763 368.9038 523.4805 373.1709 520.8042 c400.4946 503.666 426.3037 487.478 458.2617 480.4546 c481.9912 475.2402 499.3281 472.1582 523.1523 476.6396 C523.3506 476.6724 L526.1357 477.0757 531.125 481.7778 533.2324 508.7397 c535.3467 535.8149 527.0566 573.4478 507.1182 592.9863 cf353.8354 418.8115 m350.9033 420.2773 348.1157 422.1719 345.522 424.3779 C354.0596 411.0381 364.8735 399.0898 379.8423 392.7422 c387.6123 389.4463 396.2197 387.7754 405.4258 387.7754 c422.105 387.7754 440.8164 393.3955 456.7607 403.1953 c459.9365 405.1465 462.8037 407.0986 465.373 409.0508 C431.6489 392.7695 397.8354 393.9814 353.8354 418.8115 Cf457.0078 469.2764 m456.3818 469.9976 455.7578 470.7217 455.1328 471.4443 C454.4053 471.6094 453.6758 471.7739 452.9551 471.9478 C450.7373 467.8247 456.9424 452.23 457.4219 449.1992 C432.0137 457.8105 439.5879 438.3335 408.5273 437.1167 C412.4272 435.645 416.6699 434.4717 421.3481 433.6475 c422.8301 433.3867 424.25 433.165 425.6221 432.9736 C433.6016 440.6201 447.3271 445.6826 456.7236 438.0938 C461.127 442.6729 460.1875 448.1997 Y463.1377 446.4639 465.0918 444.1475 466.333 441.8325 C469.7383 444.9795 473.8467 446.6387 477.6084 445.7534 C474.1035 451.3877 468.835 456.8281 464.0117 461.7993 c461.4824 464.4077 459.1152 466.8486 457.0078 469.2764 cf316.8521 523.123 m317.1445 525.7524 318.519 527.6592 320.4443 528.8203 C315.625 532.1406 310.332 534.5229 304.4214 535.5283 C297.0269 536.2598 291.7075 534.1646 283.8589 529.3389 C284.4141 532.7534 285.5977 536.4644 287.625 539.3887 C286.123 539.0928 284.4204 538.8647 282.7139 538.2954 C274.3569 537.6528 266.0088 541.8071 263.8555 548.6831 C261.0117 543.373 260.3032 538.6001 261.3174 535.9375 c263.7739 529.4902 269.6763 525.4858 277.8452 519.9438 c283.6416 516.0112 290.3433 511.4565 297.3877 504.9297 C294.1934 511.1079 291.896 515.209 291.8418 515.3052 C290.1606 518.2954 L293.1392 516.5933 L305.6313 509.4546 311.979 494.6597 318.6992 478.9956 c319.2007 477.8262 319.7046 476.6519 320.2134 475.4756 c320.2905 475.2969 320.3696 475.1143 320.4473 474.9351 C316.1235 490.3765 314.4961 506.6318 316.8521 523.123 cfU0 1 1 0 k357.1162 493.5293 m358.4482 491.3325 359.7505 489.1851 361.0332 487.1196 C362.0288 485.5151 L371.7607 469.8281 380.1401 459.5503 392.6455 449.8091 C392.6689 449.8745 L403.3945 445.9829 412.8193 442.9551 420.6807 448.3589 c426.7075 452.5024 429.793 456.3516 429.8516 459.8003 c429.9463 465.4395 422.1733 471.1777 414.6563 476.7275 c412.8486 478.062 410.979 479.4424 409.2339 480.814 c405.4673 483.7739 402.2876 486.7422 399.4824 489.3608 c392.2837 496.0811 387.4673 500.5679 378.9883 500.02 C390.729 493.854 399.8389 483.166 404.8354 472.1611 C376.5864 498.4033 354.2222 498.2803 V355.2061 496.6763 356.1709 495.0874 357.1162 493.5293 cf0 1 1 0.12 k367.1113 481.3984 m369.8164 487.4854 375.417 489.6992 381.1582 489.4448 C372.6431 494.3262 362.9834 498.3286 354.2222 498.2803 C355.2061 496.6763 356.1709 495.0874 357.1162 493.5293 c358.4482 491.3325 359.7505 489.1851 361.0332 487.1196 C362.0288 485.5151 L363.6304 482.9326 365.1943 480.5103 366.7476 478.1992 C366.6411 479.3442 366.6538 480.4824 367.1113 481.3984 Cf402.0405 486.9888 m401.1538 487.8022 400.2998 488.5981 399.4824 489.3608 c392.2837 496.0811 387.4673 500.5679 378.9883 500.02 C386.1274 496.271 392.2856 490.8452 397.1455 484.6968 C398.0376 485.2427 398.9067 485.6929 399.3535 486.1396 C400.1553 486.4604 401.0713 486.75 402.0405 486.9888 Cf422.1123 461.4844 m409.9644 451.48 392.4336 454.4023 378.8486 462.5352 C383 457.9702 387.4688 453.8413 392.6455 449.8091 C392.6689 449.8745 L403.3945 445.9829 412.8193 442.9551 420.6807 448.3589 c426.7075 452.5024 429.793 456.3516 429.8516 459.8003 c429.8726 461.0688 429.4785 462.3428 428.7964 463.6177 C426.3223 464.4888 423.6191 462.9907 422.1123 461.4844 Cf0 1 1 0 k350.2271 504.7417 m350.1826 504.7852 350.1357 504.8315 350.0894 504.8779 C350.1201 504.8306 350.1509 504.7822 350.1812 504.7344 C350.1963 504.7373 350.2119 504.7393 350.2271 504.7417 Cf0 0 0 0 k341.9414 665.4902 m330.2607 667.7563 319.7446 663.332 313.0923 653.3501 c303.2495 638.5835 301.2329 612.8584 325.0908 576.9575 C324.7202 576.7109 L360.9014 569.9702 385.8926 585.2334 Y390.7515 619.9956 379.0464 658.293 341.9414 665.4902 cf475.043 618.0825 m476.9023 627.5356 475.624 636.6694 471.1094 646.478 c466.75 655.9521 449.1631 679.21 438.7637 679.21 c438.7363 679.21 438.709 679.2095 438.6826 679.2095 c437.6523 679.1973 434.5176 679.1602 431.8896 673.0776 c425.1216 657.4072 441.3047 633.8262 450.5342 620.6484 C458.7813 620.2783 467.0605 619.5635 475.043 618.0825 Cfu0 1 1 0 k826.1064 312.5742 m810.2637 295.541 782.5938 287.5078 759.833 285.7295 c757.333 285.5332 754.8779 285.4404 752.4756 285.4404 c735.5693 285.4395 721.9707 287.1943 708.7236 292.9473 C711.0605 272.8887 716.9648 258.1738 719.876 255.5234 c740.7764 236.7666 782.6709 232.6348 807.7725 246.8545 c824.3232 256.2295 833.9727 265.2295 836.4541 277.3447 c838.6563 288.0908 835.168 299.9326 826.1064 312.5742 Cf771.5693 226.9541 m752.9082 226.9531 733.8916 232.0361 719.8604 241.6436 C717.6592 228.7256 718.6367 213.9141 718.9746 211.3564 C725.3857 199.9219 740.4824 187.9072 776.1563 193.3701 c792.3184 195.8457 802.8154 200.9902 809.1875 209.5586 c814.3965 216.5635 817.1387 225.3564 817.6836 238.9287 C816.002 237.8535 814.2715 236.792 812.4453 235.7578 c800.8145 229.1689 786.3057 226.9551 771.5693 226.9541 cf707.916 208.9063 m706.9893 212.1641 707.9131 225.251 709.6123 237.3027 C707.8281 234.0508 705.1143 231.1113 701.1914 228.5859 C708.6484 248.0479 704.4961 266.9893 697.4795 285.5967 C691.6768 276.6279 682.0742 274.4922 Y712.5342 315.8203 721.9893 362.8945 710.7891 390.002 C719.2734 387.3926 723.4697 373.0879 V724.3203 380.5908 726.0996 385.8359 727.9629 391.3135 c729.8555 396.8701 731.8115 402.6162 733.1035 411.7227 c736.7334 437.3037 727.0049 469.5479 704.4434 479.2271 c686.3926 486.9727 669.9063 485.1836 659.1748 473.9131 C657.1396 469.959 661.3115 454.2012 663.4619 443.6948 c665.8047 432.2456 668.9658 421.4316 668.3662 414.1025 c667.0869 398.4521 657.9971 384.998 651.041 371.0684 c645.3145 359.6035 639.9063 347.8252 637.5205 336.3867 c632.3223 311.4717 644.2236 281.0186 665.7598 259.4824 C652.708 260.1357 645.8574 267.8633 V645.125 267.249 644.3467 266.6895 643.6611 266.0186 c610.2871 233.3789 595.5156 235.4658 Y598.0049 238.042 600.5693 240.5625 603.1631 243.0576 C590.1133 251.7871 580.2461 260.3037 570.2432 268.4805 C563.0459 256.918 554.1396 246.9189 547.502 240.8184 C547.833 239.9834 548.1631 239.1465 548.4951 238.3047 C576.1396 214.501 614.6924 183.7041 634.5371 149.6631 C698.2529 149.6631 L713.2939 159.5137 725.6523 173.127 734.1055 184.0352 C722.3682 187.2266 712.0547 194.3496 707.916 208.9063 cf751.4346 379.1924 m740.8086 374.3398 736.3408 366.292 V753.208 367.8135 765.1563 364.3467 772.1328 359.3301 C740.1563 361.9404 724.7031 354.418 V724.2031 345.5313 722.2383 336.2471 718.8008 326.6094 c716.377 319.8135 715.1113 316.5938 711.1738 309.2891 C725.7578 302.7471 741.8975 297.4844 760.9902 298.9756 c783.8887 300.7666 812.8691 306.168 824.5332 326.1895 c831.0986 337.457 830.7891 350.9453 823.6133 366.2773 c807.4248 400.8662 781.415 393.6006 751.2988 385.1865 c745.8291 383.6582 740.1953 382.0996 734.5732 380.7813 C734.1143 379.0879 733.709 377.3184 733.376 375.3955 C739.3154 378.1387 745.6592 379.5742 751.4346 379.1924 CfUu0 1 1 0.12 k782.5859 250.3779 m782.6719 263.5283 779.4307 276.918 770.8516 287.041 C767.1006 286.4424 763.4063 286.0088 759.833 285.7295 c757.333 285.5332 754.8779 285.4404 752.4756 285.4404 c735.5693 285.4395 721.9707 287.1943 708.7236 292.9473 C711.0605 272.8887 716.9648 258.1738 719.876 255.5234 c740.7764 236.7666 782.6709 232.6348 807.7725 246.8545 c817.249 252.2227 824.4521 257.4697 829.3535 263.2471 C816.6113 252.2109 798.6035 246.1104 782.5859 250.3779 Cf775.1777 202.6885 m779.5996 209.7002 780.0264 218.8574 777.626 227.0898 C775.6162 227.001 773.5947 226.9541 771.5693 226.9541 c752.9082 226.9531 733.8916 232.0361 719.8604 241.6436 C717.6592 228.7256 718.6367 213.9141 718.9746 211.3564 C725.3857 199.9219 740.4824 187.9072 776.1563 193.3701 c792.3184 195.8457 802.8154 200.9902 809.1875 209.5586 c809.8008 210.3828 810.376 211.2344 810.9209 212.1133 C800.0693 204.9766 787.4727 200.2148 775.1777 202.6885 Cf711.5508 406.9971 m704.9805 411.335 691.1094 419.4443 689.5303 412.1729 C699.2461 383.0254 710.7158 347.4014 705.3955 316.4365 C716.5137 344.7627 718.2861 371.8574 710.7891 390.002 C719.2734 387.3926 723.4697 373.0879 V724.3203 380.5908 726.0996 385.8359 727.9629 391.3135 c729.8555 396.8701 731.8115 402.6162 733.1035 411.7227 c736.7334 437.3037 727.0049 469.5479 704.4434 479.2271 c698.752 481.6694 693.2158 483.1616 687.9668 483.7095 C687.8545 483.5728 687.7402 483.439 687.6328 483.2949 C672.1436 467.4912 722.4512 432.417 711.5508 406.9971 Cf707.916 208.9063 m706.9893 212.1641 707.9131 225.251 709.6123 237.3027 C707.8281 234.0508 705.1143 231.1113 701.1914 228.5859 C708.6484 248.0479 704.4961 266.9893 697.4795 285.5967 C697.3857 285.4512 697.2881 285.3135 697.1924 285.1719 C696.8018 260.209 690.8271 234.4189 677.2021 213.9805 C682.8916 213.9805 687.6328 213.9805 693.3232 213.9805 C675.3789 197.7451 650.5039 191.5234 626.332 193.2256 C610.833 209.3867 593.5518 224.2256 574.4932 236.8145 C579.292 242.4092 583.8311 248.4336 586.626 255.1367 C580.8701 259.668 575.5742 264.123 570.2432 268.4805 C563.0459 256.918 554.1396 246.9189 547.502 240.8184 C547.833 239.9834 548.1631 239.1465 548.4951 238.3047 C576.1396 214.501 614.6924 183.7041 634.5371 149.6631 C698.2529 149.6631 L713.2939 159.5137 725.6523 173.127 734.1055 184.0352 C722.3682 187.2266 712.0547 194.3496 707.916 208.9063 cf718.8008 326.6094 m716.377 319.8135 715.1113 316.5938 711.1738 309.2891 C725.7578 302.7471 741.8975 297.4844 760.9902 298.9756 c783.8887 300.7666 812.8691 306.168 824.5332 326.1895 c831.0986 337.457 830.7891 350.9453 823.6133 366.2773 c817.4531 379.4395 809.8691 386.5371 801.1787 389.8203 C801.7559 388.1816 802.1758 386.4707 802.376 384.6729 c804.2725 369.5 797.6348 351.4824 784.3584 341.0518 C778.6689 337.2578 787.2041 315.4473 772.9795 311.6543 C780.8789 328.3301 776.585 349.8701 761.6172 359.7529 C750.8965 359.8809 734.4902 359.1816 724.7031 354.418 C724.2031 345.5313 722.2383 336.2471 718.8008 326.6094 cfU0 1 1 0 k196.2007 711.7451 m173.9414 709.3428 169.2451 705.5659 V194.3867 684.5386 188.9458 644.0317 Y187.7012 650.8032 182.6294 663.9282 180.7305 669.4883 C181.5547 632.9883 162.5405 609.5068 137.9902 579.1895 C136.1934 576.9697 L124.8774 562.9863 120.3159 546.9248 122.6362 529.2314 c127.3228 493.4902 158.6675 459.1807 184.0854 440.6597 c213.541 419.1982 246.9956 412.2832 280.5073 410.0186 C274.4736 415.9258 268.6943 422.1992 263.0898 428.7969 C276.7817 420.9795 303.5029 410.5215 318.1309 421.5645 c347.4844 443.7217 276.2432 501.8052 256.251 509.4995 c243.8291 514.2808 229.8721 517.3208 234.9004 533.4717 c237.2095 540.8896 242.7544 547.8311 248.9385 554.1943 C238.687 552.6138 229.8779 555.7529 225.1318 569.6611 C231.3618 571.6655 233.9336 577.1895 235.8428 583.0391 c242.8521 604.5122 235.1689 625.0352 252.3511 643.4409 C246.1133 638.6973 238.5381 630.3525 231.0874 627.7905 c214.2871 622.0137 223.2827 639.2627 229.3452 647.7881 c237.6719 659.499 249.4424 669.6025 262.6211 675.3799 C255.2739 675.2788 240.2954 673.4277 244.7363 683.3301 c253.3604 702.5605 300.9849 702.9531 324.4189 696.0698 c333.2461 693.4775 340.8105 689.9878 347.5376 686.1885 C347.542 686.2026 347.5483 686.2178 347.5527 686.2324 C347.6533 686.1587 347.7578 686.0815 347.8599 686.0059 C361.6753 678.1523 371.9482 669.0229 382.3457 663.7344 C389.479 660.5854 396.6777 658.75 403.2139 659.6182 c403.5493 659.6646 403.8877 659.7207 404.2271 659.7778 c409.1963 660.6641 413.752 663.1855 417.5615 667.9844 c421.7417 673.25 423.0884 681.4849 423.6421 689.5225 C423.5801 691.6006 423.4438 693.6772 423.2349 695.7583 C385.915 762.0054 307.4019 788.2988 251.1758 790.6523 c224.0537 791.7866 216.1147 789.5298 213.8511 788.3481 C250.0088 776.4346 256.5718 753.4951 Y235.7822 762.1606 164.5576 772.6807 149.8833 758.6504 C150.189 753.0342 196.2271 744.5303 Y170.2432 742.9722 143.2646 744.8623 119.9312 730.1455 c107.3867 722.2324 101.0347 709.5762 103.3306 706.519 c107.3774 701.1323 153.415 723.7109 196.2007 711.7451 Cfu0 1 1 0.12 k531.1836 574.6162 m529.1631 612.6514 499.957 637.9575 470.2803 661.8882 C479.6289 644.6616 502.458 637.2686 506.3203 618.8711 c507.1875 614.7349 506.6328 610.5898 505.1768 606.6899 C508.2051 604.6787 511.0771 602.3848 513.7568 599.7588 c521.0039 592.6563 526.7715 583.7476 531.207 573.9907 C531.1973 574.1992 531.1943 574.4082 531.1836 574.6162 cf470.0957 467.7856 m475.5869 462.1255 481.5713 455.9424 485.5645 449.0845 C489.3516 453.5439 492.8242 459.3354 496.2051 465.0576 C487.3418 465.3799 478.7393 466.6274 469.4805 468.4209 C469.6865 468.2085 469.8867 468.0005 470.0957 467.7856 cf256.251 509.4995 m243.8291 514.2808 229.8721 517.3208 234.9004 533.4717 c237.1133 540.582 242.3027 547.2539 248.1753 553.3994 C246.0957 553.1411 217.7197 543.814 218.1392 519.4175 C210.5293 526.5229 201.481 537.144 195.3911 535.4038 C192.4907 533.9551 191.2222 525.5571 193.6504 514.2354 C184.6606 527.8647 164.9429 545.2632 158.4878 543.0371 c154.4712 541.6514 153.2349 525.8452 155.7842 516.7173 C150.0781 527.543 134.2041 548.4531 129.0908 547.7783 c122.6758 546.8662 122.2012 532.5493 122.6362 529.2314 c127.3228 493.4902 158.6675 459.1807 184.0854 440.6597 c213.541 419.1982 246.9956 412.2832 280.5073 410.0186 C274.4736 415.9258 268.6943 422.1992 263.0898 428.7969 C276.7817 420.9795 303.5029 410.5215 318.1309 421.5645 c347.4844 443.7217 276.2432 501.8052 256.251 509.4995 cf196.2007 711.7451 m177.4067 709.7148 170.7183 706.4541 V195.3901 697.2183 213.9492 703.5981 210.6436 708.9878 C196.2603 738.1064 145.2119 731.7466 117.7114 714.6772 c112.6704 711.5269 108.0454 708.3882 103.0068 707.1851 C103.0835 706.9297 103.1904 706.7061 103.3306 706.519 c107.3774 701.1323 153.415 723.7109 196.2007 711.7451 Cf196.2271 744.5303 m203.0054 744.8877 215.689 741.5864 216.5591 745.3564 C213.6592 760.1455 150.2822 759.0313 149.8833 758.6504 C150.1406 753.9189 185.9229 746.5498 196.2271 744.5303 Cf388.0684 738.5845 m399.9155 724.5957 407.8613 707.8218 407.0259 689.2964 C402.4082 699.5913 392.5977 707.707 382.2842 711.8325 C386.5337 701.6338 394.582 689.1509 390.064 677.7954 C353.6855 691.4888 308.8389 716.7246 272.375 698.5879 C289.7671 701.5562 311.0366 700.0005 324.4189 696.0698 c333.2461 693.4775 340.8105 689.9878 347.5376 686.1885 C347.542 686.2026 347.5483 686.2178 347.5527 686.2324 C347.6533 686.1587 347.7578 686.0815 347.8599 686.0059 C361.6753 678.1523 371.9482 669.0229 382.3457 663.7344 C389.479 660.5854 396.6777 658.75 403.2139 659.6182 c403.5493 659.6646 403.8877 659.7207 404.2271 659.7778 c409.1963 660.6641 413.752 663.1855 417.5615 667.9844 c421.7417 673.25 423.0884 681.4849 423.6421 689.5225 C423.5801 691.6006 423.4438 693.6772 423.2349 695.7583 C413.8027 712.5005 401.7373 726.6875 388.0684 738.5845 Cf256.5718 753.4951 m255.854 753.7944 273.1069 745.3569 277.3535 747.1719 C290.2158 754.3467 253.3877 785.665 213.8511 788.3481 C250.0088 776.4346 256.5718 753.4951 YfUu1 0 0 0 k406.042 342.7715 m410.6387 342.7705 415.1689 343.0303 419.6226 343.5869 c434.0156 345.3838 443.377 350.2227 445.9834 357.2119 c448.2256 363.2236 445.8682 371.2266 439.3359 380.1846 C440.3623 374.4053 439.2695 369.0938 433.8477 364.5684 c410.5884 345.1572 356.7578 363.3691 333.5376 373.4395 c317.771 380.2764 304.0112 389.3066 291.4917 399.9619 C278.9731 400.4854 268.0557 401.5244 255.2578 403.585 C269.1616 390.8145 287.7715 379.2891 300.5405 373.3906 c332.1426 358.791 369.9741 342.7734 406.042 342.7715 cf525.1377 292.2148 m531.3496 297.7412 537.6348 306.1357 540.4033 313.3311 C532.3389 320.3994 523.7275 327.9121 516.3008 335.2031 c501.707 349.5303 487.6641 363.3125 470.9258 373.8496 C489.5371 355.5928 507.4902 328.5537 525.1377 292.2148 Cf528.5098 285.1367 m532.0381 277.6182 535.5547 269.7393 539.0645 261.4688 c540.583 257.8887 542.2676 253.8203 544.0234 249.4961 C553.335 258.0781 565.2617 271.9766 571.1582 286.1846 C566.9014 291.2764 554.8857 304.2393 547.4863 310.4346 C546.4395 310.3896 L542.9824 301.5615 536.3359 291.457 528.5098 285.1367 Cf283.2515 287.7842 m283.1655 287.7656 L283.1587 287.7988 283.1519 287.832 283.1445 287.8652 C279.8711 290.4141 276.271 292.8203 272.3018 295.1191 c230.3574 319.416 173.1421 324.5693 125.3975 308.5986 C107.9683 299.6787 103.9419 281.6914 99.3491 261.1689 C99.0259 259.8408 L98.8608 259.3486 99.0063 258.3916 100.8979 256.7969 C101.3086 257.7441 101.7461 258.7441 102.2148 259.8076 C102.6587 260.9551 103.1436 262.0674 103.6821 263.1348 C104.1641 264.2266 L104.2466 264.1904 L124.1914 300.6445 199.4531 288.9307 215.1387 286.0391 c229.02 283.4824 252.0898 276.0645 266.8442 270.9238 C272.5713 271.166 277.6641 271.3652 281.5449 271.4873 c286.8525 271.6553 292.4883 271.8242 298.2505 271.9219 C294.2061 277.8555 289.292 283.0664 283.2515 287.7842 Cf555.7598 219.2783 m560.5625 208.291 555.8213 195.4893 Y550.4395 211.3369 535.748 242.7686 529.3857 257.7656 c519.2754 281.6025 490.3486 355.2725 448.0977 384.2295 C457.625 370.4375 457.2607 360.3154 454.8691 353.8984 c452.1094 346.498 443.958 337.0684 420.7979 334.1768 c415.9648 333.5732 411.0537 333.292 406.0918 333.292 c368.1528 333.291 327.189 349.7578 294.6665 364.7822 c285.7437 368.9043 274.103 375.6553 262.9766 383.6748 C272.0034 367.7178 278.1675 349.21 282.5249 332.6777 c283.5557 328.7686 284.5288 325.0752 285.5005 321.5811 c287.4419 314.5986 288.9849 306.8496 290.4775 299.3574 c291.1265 296.0986 291.7412 293.0176 292.3774 290.041 C298.2842 284.7461 305.0054 278.8652 308.9922 272.1592 C308.7256 272 L318.8936 272.0137 327.2471 271.6992 336.5156 270.6572 c388.8462 264.7783 451.4111 238.417 490.0352 203.499 c507.1582 188.0205 519.8506 168.6533 531.9424 149.6631 C617.7363 149.6631 L601.4336 175.5889 577.165 199.9785 555.7598 219.2783 Cf276.0952 301.6885 m268.7397 319.8926 255.7515 342.249 Y264.6235 335.9297 270.8467 326.5117 277.9297 312.8789 C277.4321 314.9922 276.9141 317.0605 276.3638 319.041 c275.375 322.5967 274.394 326.3193 273.355 330.2598 c266.0352 358.0303 256.9253 392.5908 234.9448 407.0762 C234.9941 407.3174 L223.7373 410.1221 212.6108 413.9229 201.833 419.0918 C177.6958 416.5381 156.2505 389.1621 139.7266 339.71 c138.5581 336.2119 137.4766 332.5977 136.4307 329.1016 c135.4243 325.7402 135.3335 325.1572 134.2012 321.7275 C181.6948 334.4443 235.3193 325.3057 276.0952 301.6885 CfUu1 0 0 0.16 k255.2578 403.585 m269.1616 390.8145 287.7715 379.2891 300.5405 373.3906 c308.6685 369.6357 317.2104 365.7881 326.0269 362.1426 C325.002 367.1279 328.0688 371.6387 332.4922 373.918 C317.167 380.6982 303.7305 389.5459 291.4917 399.9619 C278.9731 400.4854 268.0557 401.5244 255.2578 403.585 Cf433.8477 364.5684 m433.7266 364.4688 433.6016 364.375 433.4795 364.2773 C437.752 361.377 440.9414 356.7207 441.9111 351.5869 C443.8281 353.2598 445.21 355.1387 445.9834 357.2119 c448.2256 363.2236 445.8682 371.2266 439.3359 380.1846 C440.3623 374.4053 439.2695 369.0938 433.8477 364.5684 cf525.1377 292.2148 m528.4033 295.1191 531.6836 298.8184 534.4668 302.7168 C527.9727 311.8721 522.6826 321.8379 519.0117 332.582 C518.0938 333.458 517.1875 334.333 516.3008 335.2031 c501.707 349.5303 487.6641 363.3125 470.9258 373.8496 C489.5371 355.5928 507.4902 328.5537 525.1377 292.2148 Cf528.5098 285.1367 m532.0381 277.6182 535.5547 269.7393 539.0645 261.4688 c540.583 257.8887 542.2676 253.8203 544.0234 249.4961 C550.2314 255.2188 557.5957 263.3096 563.5664 272.2744 C554.5283 279.5332 546.1885 287.6738 539.0088 296.6768 C535.959 292.3135 532.3799 288.2617 528.5098 285.1367 Cf125.3975 308.5986 m107.9683 299.6787 103.9419 281.6914 99.3491 261.1689 C99.0259 259.8408 L98.8608 259.3486 99.0063 258.3916 100.8979 256.7969 C101.3086 257.7441 101.7461 258.7441 102.2148 259.8076 C102.6587 260.9551 103.1436 262.0674 103.6821 263.1348 C104.1641 264.2266 L104.2466 264.1904 L111.2065 276.9111 124.9063 283.7627 140.4561 287.1738 C138.2808 295.7305 143.2515 306.4248 148.5825 314.5811 C140.6841 313.1055 132.9224 311.1152 125.3975 308.5986 Cf283.2515 287.7842 m283.1655 287.7656 L283.1587 287.7988 283.1519 287.832 283.1445 287.8652 C279.8711 290.4141 276.271 292.8203 272.3018 295.1191 c270.561 296.1279 268.7866 297.0928 266.9956 298.0361 C269.936 288.9941 264.6553 280.1055 256.9771 274.2754 C260.5103 273.1055 263.8501 271.9668 266.8442 270.9238 C272.5713 271.166 277.6641 271.3652 281.5449 271.4873 c286.8525 271.6553 292.4883 271.8242 298.2505 271.9219 C294.2061 277.8555 289.292 283.0664 283.2515 287.7842 Cf511.3145 298.6631 m496.6309 329.0029 475.082 365.7344 448.0977 384.2295 C457.625 370.4375 457.2607 360.3154 454.8691 353.8984 c453.6924 350.7432 451.5293 347.2197 447.6475 343.9912 C474.6816 345.0684 494.8623 323.0967 511.3145 298.6631 Cf558.3223 216.9482 m562.7441 204.2764 563.085 191.0156 552.9766 179.8418 C548.2344 196.9111 538.752 211.1357 527.3721 223.4639 C514.3652 210.877 498.7588 207.5752 483.0186 209.5283 C485.4316 207.5479 487.7783 205.54 490.0352 203.499 c507.1582 188.0205 519.8506 168.6533 531.9424 149.6631 C617.7363 149.6631 L602.0791 174.5615 579.0811 198.0313 558.3223 216.9482 Cf262.9766 383.6748 m272.0034 367.7178 278.1675 349.21 282.5249 332.6777 c282.9712 330.9844 283.4063 329.3389 283.8354 327.7246 C288.3062 342.375 307.1284 350.2783 324.4385 349.5859 C326.8052 349.5859 329.1211 349.46 331.4063 349.2549 C318.4546 354.0957 306.043 359.5264 294.6665 364.7822 c285.7437 368.9043 274.103 375.6553 262.9766 383.6748 Cf268.2715 348.8564 m261.519 371.9697 252.1973 395.707 234.9448 407.0762 C234.9941 407.3174 L223.7373 410.1221 212.6108 413.9229 201.833 419.0918 C188.0762 417.6357 175.1953 408.1045 163.6001 391.0313 c154.8511 378.1484 146.833 360.9766 139.7266 339.71 c138.5581 336.2119 137.4766 332.5977 136.4307 329.1016 c135.4243 325.7402 135.3335 325.1572 134.2012 321.7275 C141.8672 323.7803 149.6943 325.2549 157.6001 326.1992 C164.1353 350.7988 175.1128 375.2539 193.2202 393.4268 C218.6968 389.7119 244.1475 372.9795 261.8516 355.2754 c263.9717 353.1553 266.1504 351.0352 268.2715 348.8564 CfU0 1 1 0 k478.3096 197.873 m440.7861 231.7939 383.6792 257.4043 332.8237 263.1191 c316.1558 264.9912 298.6909 263.8916 281.7852 263.9043 c242.9736 263.9346 234.7739 253.2158 202.9849 267.8877 C226.2905 269.0781 248.6836 270.1152 V236.8071 273.917 223.4893 277.7041 213.4209 279.5586 c204.4727 281.2061 128.644 291.498 112.1558 258.8486 C111.7646 257.9609 L111.4634 257.2783 111.1792 256.6338 110.9038 256.0098 C110.6909 255.4385 110.4951 254.8564 110.3164 254.2617 C110.1567 254.3096 L108.9653 251.5859 108.0322 249.3857 107.248 247.3125 C106.8774 245.4619 L106.5596 245.4141 L106.2925 244.6436 106.0415 243.8721 105.8013 243.0791 C104.1235 237.5381 L99.0215 240.2764 L94.6079 242.6445 89.9775 245.5098 85.5 248.2803 c74.832 254.8799 63.8501 261.6748 54.6294 262.7871 C55.3745 260.0371 57.4688 255.3086 62.9468 247.5078 c69.291 238.4746 77.6729 228.7852 84.4087 221.001 c85.6069 219.6162 86.7461 218.2998 87.8022 217.0693 C96.5503 206.876 L54.7808 224.9971 46.8823 222.709 V46.9653 204.084 96.3032 158.0098 Y67.8286 160.875 60.9995 161.5244 V68.5752 140.4766 128.4072 125.4541 160.8584 125.3154 C150.9014 118.2031 138.1191 118.2129 V172.1631 95.0596 223.9316 90.4658 292.3521 104.6133 c315.7349 109.4482 339.0967 117.1553 361.689 124.6074 c389.9053 133.915 419.0815 143.54 448.9932 147.8652 c467.3125 150.5137 493.584 152.3145 515.3975 151.0684 C504.6074 167.8301 493.082 184.5186 478.3096 197.873 cf0 1 1 0.12 k84.4087 221.001 m85.6069 219.6162 86.7461 218.2998 87.8022 217.0693 C96.3428 207.1182 L103.6235 203.3994 109.4507 201.2598 115.978 203.1416 C128.5156 205.7236 72.4629 240.3887 55.0996 261.3164 C56.1299 258.4512 58.3389 254.0693 62.9468 247.5078 c69.291 238.4746 77.6729 228.7852 84.4087 221.001 cf96.2197 158.0869 m102.7939 156.9473 114.5024 152.6211 115.978 156.6777 c120.7212 169.7227 67.6689 192.0791 47.5039 222.834 C47.2803 222.8027 47.0688 222.7627 46.8823 222.709 C46.9634 204.5059 94.083 160.0918 96.2197 158.0869 Cf216.6323 268.5723 m225.3452 269.0049 237.1313 269.5801 248.6836 270.1152 C236.8071 273.917 223.4893 277.7041 213.4209 279.5586 c211.5913 279.8965 206.9614 280.5947 200.6162 281.2129 C207.0688 278.1377 213.2202 274.2793 216.6323 268.5723 Cf482.3779 194.0176 m482.6758 191.2402 482.3174 188.5977 480.9063 186.4805 c462.8887 158.9795 406.3848 181.1025 403.5962 175.9258 C399.7476 173.7266 416.1553 166.2646 408.8364 164.6699 C343.4043 173.2041 281.7656 149.4971 220.1265 130.5313 C206.8032 125.8291 196.3691 124.2236 180.6924 131.04 C175.3491 134.5498 189.3623 138.9746 187.8877 145.2432 C183.8311 148.9316 140.6865 118.3076 61.0547 161.3857 C68.8438 140.4102 128.479 125.4541 160.8584 125.3154 C150.9014 118.2031 138.1191 118.2129 V172.1631 95.0596 223.9316 90.4658 292.3521 104.6133 c315.7349 109.4482 339.0967 117.1553 361.689 124.6074 c389.9053 133.915 419.0815 143.54 448.9932 147.8652 c467.3125 150.5137 493.584 152.3145 515.3975 151.0684 C505.6201 166.2568 495.2305 181.376 482.3779 194.0176 Cf1 Ap0.5 0.7 0.8 0.7 k358.3789 601.8965 m363.104 587.874 357.8853 573.4541 346.7183 569.6909 c335.5527 565.9282 322.6689 574.2451 317.9424 588.2686 c313.2153 602.291 318.437 616.7109 329.6021 620.4736 c340.7686 624.2383 353.6519 615.9189 358.3789 601.8965 cf/BBAccumRotation (0.325085) XT464.248 636.0029 m467.4229 626.8682 464.0996 617.4131 456.8281 614.8848 c449.5527 612.3545 441.0811 617.7109 437.9063 626.8467 c434.7305 635.9814 438.0527 645.4375 445.3281 647.9658 c452.6006 650.4946 461.0723 645.1382 464.248 636.0029 cf0 0 1 0 k277.6953 556.7764 m278.5859 554.1201 284.2471 553.6221 290.3394 555.665 c296.4321 557.707 300.6504 561.5146 299.7603 564.1699 c298.8701 566.8267 293.21 567.3242 287.1167 565.2822 c281.0234 563.2402 276.8062 559.4321 277.6953 556.7764 cf0 Ap344.8682 488.3076 m338.5171 459.8555 357.2998 444.5264 379.6377 435.021 C363.938 448.6006 358.0239 471.479 344.8682 488.3076 Cf0.4 0.7 1 0.5 k354.3892 594.3013 m351.9219 587.0146 341.6953 579.9492 334.9458 578.9023 C342.0781 575.167 357.9849 576.1226 354.3892 594.3013 Cf461.3955 636.0776 m459.042 627.9756 454.3525 626.686 447.5693 624.2837 C459.4785 618.8105 465.2461 626.2168 461.3955 636.0776 Cf1 Ap0 0 0 0 k331.5508 606.3354 m331.5508 603.3237 329.8525 600.8828 327.7573 600.8828 c325.6626 600.8828 323.9644 603.3237 323.9644 606.3354 c323.9644 609.3467 325.6626 611.7881 327.7573 611.7881 c329.8525 611.7881 331.5508 609.3467 331.5508 606.3354 cf448.1885 638.5195 m448.1885 636.2612 446.915 634.4312 445.3447 634.4312 c443.7734 634.4312 442.5 636.2612 442.5 638.5195 c442.5 640.7769 443.7734 642.6074 445.3447 642.6074 c446.915 642.6074 448.1885 640.7769 448.1885 638.5195 cf0 Ap0 0 1 0 k442.5342 579.0176 m440.7119 569.0571 438.0938 564.2563 428.645 559.8711 C457.7334 552.9092 479.1182 539.3794 506.6133 512.3208 C497.8848 544.6167 466.7539 573.1675 442.5342 579.0176 CfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF